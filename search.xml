<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用node-gyp编译electron的C模块</title>
      <link href="/2024/01/10/%E4%BD%BF%E7%94%A8node-gyp%E7%BC%96%E8%AF%91electron%E7%9A%84C%E6%A8%A1%E5%9D%97/"/>
      <url>/2024/01/10/%E4%BD%BF%E7%94%A8node-gyp%E7%BC%96%E8%AF%91electron%E7%9A%84C%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>在对应模块下运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node-gyp rebuild --target=25.9.7 --<span class="built_in">arch</span>=ia32 --dist-url=https://electronjs.org/headers</span><br></pre></td></tr></table></figure></p><p><code>target</code>换成对应的Electron版本</p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置 npm 和 yarn 的镜像源为淘宝镜像源</title>
      <link href="/2023/12/01/%E8%AE%BE%E7%BD%AE-npm-%E5%92%8C-yarn-%E7%9A%84%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%BA%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>/2023/12/01/%E8%AE%BE%E7%BD%AE-npm-%E5%92%8C-yarn-%E7%9A%84%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%BA%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ==========================================================</span></span><br><span class="line"><span class="comment"># NPM</span></span><br><span class="line"><span class="comment"># ==========================================================</span></span><br><span class="line"></span><br><span class="line">npm <span class="built_in">set</span> registry https://registry.npmmirror.com <span class="comment"># 注册模块镜像</span></span><br><span class="line">npm <span class="built_in">set</span> disturl https://npmmirror.com/mirrors/node <span class="comment"># node-gyp 编译依赖的 node 源码镜像</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 以下选择添加</span></span><br><span class="line">npm <span class="built_in">set</span> sass_binary_site https://registry.npmmirror.com/mirrors/node-sass <span class="comment"># node-sass 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> electron_mirror https://registry.npmmirror.com/mirrors/electron/ <span class="comment"># electron 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> puppeteer_download_host https://registry.npmmirror.com/mirrors <span class="comment"># puppeteer 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> chromedriver_cdnurl https://registry.npmmirror.com/mirrors/chromedriver <span class="comment"># chromedriver 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> operadriver_cdnurl https://registry.npmmirror.com/mirrors/operadriver <span class="comment"># operadriver 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> phantomjs_cdnurl https://registry.npmmirror.com/mirrors/phantomjs <span class="comment"># phantomjs 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> selenium_cdnurl https://registry.npmmirror.com/mirrors/selenium <span class="comment"># selenium 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> node_inspector_cdnurl https://registry.npmmirror.com/mirrors/node-inspector <span class="comment"># node-inspector 二进制包镜像</span></span><br><span class="line">npm <span class="built_in">set</span> sentrycli_cdnurl https://registry.npmmirror.com/mirrors/sentry-cli <span class="comment"># sentry-cli</span></span><br><span class="line"></span><br><span class="line">npm cache clean --force <span class="comment"># 清空缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ==========================================================</span></span><br><span class="line"><span class="comment"># YARN</span></span><br><span class="line"><span class="comment"># ==========================================================</span></span><br><span class="line"></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npmmirror.com <span class="comment"># 注册模块镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> disturl https://npmmirror.com/mirrors/node <span class="comment"># node-gyp 编译依赖的 node 源码镜像</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 以下选择添加</span></span><br><span class="line">yarn config <span class="built_in">set</span> sass_binary_site https://registry.npmmirror.com/mirrors/node-sass <span class="comment"># node-sass 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> electron_mirror https://registry.npmmirror.com/mirrors/electron/ <span class="comment"># electron 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> puppeteer_download_host https://registry.npmmirror.com/mirrors <span class="comment"># puppeteer 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> chromedriver_cdnurl https://registry.npmmirror.com/mirrors/chromedriver <span class="comment"># chromedriver 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> operadriver_cdnurl https://registry.npmmirror.com/mirrors/operadriver <span class="comment"># operadriver 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> phantomjs_cdnurl https://registry.npmmirror.com/mirrors/phantomjs <span class="comment"># phantomjs 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> selenium_cdnurl https://registry.npmmirror.com/mirrors/selenium <span class="comment"># selenium 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> node_inspector_cdnurl https://registry.npmmirror.com/mirrors/node-inspector <span class="comment"># node-inspector 二进制包镜像</span></span><br><span class="line">yarn config <span class="built_in">set</span> sentrycli_cdnurl https://registry.npmmirror.com/mirrors/sentry-cli <span class="comment"># sentry-cli</span></span><br><span class="line"></span><br><span class="line">yarn cache clean <span class="comment"># 清空缓存</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>electron屏幕自动适配</title>
      <link href="/2022/08/31/electron%E5%B1%8F%E5%B9%95%E8%87%AA%E5%8A%A8%E9%80%82%E9%85%8D/"/>
      <url>/2022/08/31/electron%E5%B1%8F%E5%B9%95%E8%87%AA%E5%8A%A8%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>在前端代码里面添加：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> devInnerWidth= <span class="number">1920.0</span> <span class="comment">// 开发时的InnerWidth</span></span><br><span class="line"><span class="keyword">const</span> zoomFactor =  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / devInnerWidth;</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>).<span class="property">webFrame</span>.<span class="title function_">setZoomFactor</span>(zoomFactor);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos安装yate服务器</title>
      <link href="/2022/08/11/centos%E5%AE%89%E8%A3%85yate%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2022/08/11/centos%E5%AE%89%E8%A3%85yate%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++</span><br><span class="line">wget https://zmgo.oss-cn-shenzhen.aliyuncs.com/public/server/yate6.tar.gz</span><br><span class="line">tar -zxvf yate6.tar.gz</span><br><span class="line"><span class="built_in">cd</span> yate</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">./run -vvvvv -CDo <span class="comment">#调试模式运行</span></span><br><span class="line">./run -d <span class="comment">#后台运行</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos安装mysql-community-devel</title>
      <link href="/2022/08/11/centos%E5%AE%89%E8%A3%85mysql-community-devel/"/>
      <url>/2022/08/11/centos%E5%AE%89%E8%A3%85mysql-community-devel/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-common-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-libs-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">wget https://repo.mysql.com/yum/mysql-5.7-community/el/7/x86_64/mysql-community-devel-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-common-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-libs-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">rpm -ivh mysql-community-devel-5.7.39-1.el7.x86_64.rpm</span><br><span class="line">yum install -y mysql-community-devel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker容器apache安装rewrite模块</title>
      <link href="/2022/05/12/docker%E5%AE%B9%E5%99%A8apache%E5%AE%89%E8%A3%85rewrite%E6%A8%A1%E5%9D%97/"/>
      <url>/2022/05/12/docker%E5%AE%B9%E5%99%A8apache%E5%AE%89%E8%A3%85rewrite%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>进入容器内部：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a2enmod rewrite <span class="comment"># 安装模块</span></span><br><span class="line">service apache2 restart <span class="comment"># 重启容器</span></span><br></pre></td></tr></table></figure></p><p>编辑<code>.htaccess</code>文件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">mod_rewrite.c</span>&gt;</span></span><br><span class="line">  Options +FollowSymlinks -Multiviews</span><br><span class="line">  RewriteEngine On</span><br><span class="line"></span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">  RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>查看是否开启成功：<br>执行<code>phpinfo()</code>函数，搜索<code>mod_rewrite</code></p><p>使用镜像：<br><a href="https://hub.docker.com/repository/docker/zevenfang/docker-apache-php7">zevenfang/docker-apache-php7</a></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用grep全目录全文搜索字符串</title>
      <link href="/2022/03/30/%E4%BD%BF%E7%94%A8grep%E5%85%A8%E7%9B%AE%E5%BD%95%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/03/30/%E4%BD%BF%E7%94%A8grep%E5%85%A8%E7%9B%AE%E5%BD%95%E5%85%A8%E6%96%87%E6%90%9C%E7%B4%A2%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<p>搜索etc下面的文件，包含所有目录下的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -lr <span class="string">&#x27;string&#x27;</span> /etc/</span><br></pre></td></tr></table></figure><br>搜索当前目录下面的文件，不包含子目录下的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -l <span class="string">&#x27;string&#x27;</span> .</span><br></pre></td></tr></table></figure><br>-i，忽略大小写<br>-l，找出含有这个字符串的文件<br>-r，不放过子目录</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行代码让网站变灰</title>
      <link href="/2022/03/21/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E8%AE%A9%E7%BD%91%E7%AB%99%E5%8F%98%E7%81%B0/"/>
      <url>/2022/03/21/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E8%AE%A9%E7%BD%91%E7%AB%99%E5%8F%98%E7%81%B0/</url>
      
        <content type="html"><![CDATA[<p>全站变灰，整站页面根元素加样式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><style>body {    filter: grayscale(100%);}    </style>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正确清空删除nginx日志log文件</title>
      <link href="/2022/03/21/%E6%AD%A3%E7%A1%AE%E6%B8%85%E7%A9%BA%E5%88%A0%E9%99%A4nginx%E6%97%A5%E5%BF%97log%E6%96%87%E4%BB%B6/"/>
      <url>/2022/03/21/%E6%AD%A3%E7%A1%AE%E6%B8%85%E7%A9%BA%E5%88%A0%E9%99%A4nginx%E6%97%A5%E5%BF%97log%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>nginx日志如果不加限制，会把服务器空间写满，这时候如果直接rm删除log文件，磁盘空间不会直接释放。</p><p>未释放磁盘空间原因：<br>在Linux或者Unix系统中，通过rm或者文件管理器删除文件将会从文件系统的目录结构上解除链接(unlink).然而如果文件是被打开的（有一个进程正在使用），那么进程将仍然可以读取该文件，磁盘空间也一直被占用。而我删除的是nginx的log文件删除的时候文件应该正在被使用。</p><p>解决方法：<br>重启<code>nginx</code>服务，或者用<code>echo &quot;&quot; &gt; /usr/local/nginx/logs/access.log</code>清空日志文件，而不是直接删除。<br><code>/usr/local/nginx</code>路径替换成实际的<code>nginx</code>路径。<br>该解决方法对其它应用产生的日志文件也有效</p><p>如果已经删除文件，<code>nginx -s reload</code>不会生效，需要：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop &amp;&amp; nginx <span class="comment">#重启nginx</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker直接运行composer安装php的依赖</title>
      <link href="/2022/03/10/%E4%BD%BF%E7%94%A8docker%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8Ccomposer%E5%AE%89%E8%A3%85php%E7%9A%84%E4%BE%9D%E8%B5%96/"/>
      <url>/2022/03/10/%E4%BD%BF%E7%94%A8docker%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8Ccomposer%E5%AE%89%E8%A3%85php%E7%9A%84%E4%BE%9D%E8%B5%96/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> --interactive --<span class="built_in">tty</span> --volume <span class="variable">$PWD</span>:/app composer install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装VeryNginx</title>
      <link href="/2022/03/10/CentOS%E5%AE%89%E8%A3%85VeryNginx/"/>
      <url>/2022/03/10/CentOS%E5%AE%89%E8%A3%85VeryNginx/</url>
      
        <content type="html"><![CDATA[<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pcre-devel openssl openssl-devel <span class="comment">#安装依赖</span></span><br><span class="line">useradd nginx <span class="comment">#添加nginx用户</span></span><br><span class="line">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/alexazhou/VeryNginx verynginx <span class="comment">#下载</span></span><br><span class="line"><span class="built_in">cd</span> verynginx</span><br><span class="line">python install.py install <span class="comment">#安装</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/verynginx/openresty/nginx /root/server/nginx <span class="comment">#目录软链接</span></span><br><span class="line"><span class="built_in">ln</span> -s /opt/verynginx/openresty/nginx/sbin/nginx /usr/bin/nginx <span class="comment">#软链接</span></span><br><span class="line">nginx <span class="comment">#运行</span></span><br><span class="line">nginx -s stop <span class="comment">#停止</span></span><br><span class="line">nginx -s reload <span class="comment">#重载</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用killall指令来关闭进程</title>
      <link href="/2022/02/24/%E4%BD%BF%E7%94%A8killall%E6%8C%87%E4%BB%A4%E6%9D%A5%E5%85%B3%E9%97%AD%E8%BF%9B%E7%A8%8B/"/>
      <url>/2022/02/24/%E4%BD%BF%E7%94%A8killall%E6%8C%87%E4%BB%A4%E6%9D%A5%E5%85%B3%E9%97%AD%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Linux <code>killall</code> 用于杀死一个进程，与 <code>kill</code> 不同的是它会杀死指定名字的所有进程。<br><code>kill</code> 命令杀死指定进程 <code>PID</code>，需要配合 <code>ps</code> 使用，而 <code>killall</code> 直接对进程对名字进行操作，更加方便。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y psmisc</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Usage: killall [-Z 上下文] [-u 用户名] [ -eIgiqrvw ] [ -信号 ] 程序名...</span><br><span class="line">       killall -l, --list</span><br><span class="line">       killall -V, --version</span><br><span class="line"></span><br><span class="line">  -e,--exact          进程需要和名字完全相符</span><br><span class="line">  -I,--ignore-case    忽略大小写</span><br><span class="line">  -g,--process-group  结束进程组</span><br><span class="line">  -y,--younger-than   仅匹配指定时间之后的进程，与-o选项相反</span><br><span class="line">  -o,--older-than     仅匹配指定时间之前（在指定时间之前开始）的进程。单位s、m、h、d、w（周）、M、y</span><br><span class="line">  -i,--interactive    结束之前询问</span><br><span class="line">  -l,--list           列出所有的信号名称</span><br><span class="line">  -q,--quiet          进程没有结束时，不输出任何信息</span><br><span class="line">  -r,--regexp         将进程名模式解释为扩展的正则表达式</span><br><span class="line">  -s,--signal SIGNAL  发送指定信号</span><br><span class="line">  -u,--user USER      结束指定用户的进程</span><br><span class="line">  -v,--verbose        显示详细执行过程</span><br><span class="line">  -V,--version        显示详细执行过程</span><br><span class="line">  -w,--wait           等待所有的进程都结束</span><br><span class="line">  -Z,--context 正则表达式 仅杀死含有指定上下文的进程</span><br><span class="line">                          (必须在其他参数前使用)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github使用代理clone仓库</title>
      <link href="/2022/02/09/Github%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86clone%E4%BB%93%E5%BA%93/"/>
      <url>/2022/02/09/Github%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%90%86clone%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p><code>Github</code>在国内访问很慢，有时clone仓库半天都下不来，这时候可以通过代理网站<code>ghproxy.com</code>下载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://ghproxy.com/https://github.com/GithubUser/Repo.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jsdelivr映射GitHub文件</title>
      <link href="/2022/02/08/%E4%BD%BF%E7%94%A8jsdelivr%E6%98%A0%E5%B0%84GitHub%E6%96%87%E4%BB%B6/"/>
      <url>/2022/02/08/%E4%BD%BF%E7%94%A8jsdelivr%E6%98%A0%E5%B0%84GitHub%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p><code>raw.githubusercontent.com</code>国内访问非常慢，可以使用，<code>cdn.jsdelivr.net</code>做代理映射，如下链接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GithubUser/Repo@master/your/file/path.js</span><br></pre></td></tr></table></figure><p>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/ZevenFang/zevencourse@master/src/main/java/com/zeven/course/model/Dept.java</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用ffplay播放音频</title>
      <link href="/2022/01/10/%E4%BD%BF%E7%94%A8ffplay%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91/"/>
      <url>/2022/01/10/%E4%BD%BF%E7%94%A8ffplay%E6%92%AD%E6%94%BE%E9%9F%B3%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ffmpeg <span class="comment"># 安装ffmpeg后，自带ffplay</span></span><br><span class="line">ffplay -nodisp -autoexit audio.aac</span><br></pre></td></tr></table></figure><p><code>nodisp</code>不输出视频，不弹出视频窗口<br><code>autoexit</code>播放完成后，自动退出</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yarn不检查node版本</title>
      <link href="/2021/12/17/yarn%E4%B8%8D%E6%A3%80%E6%9F%A5node%E7%89%88%E6%9C%AC/"/>
      <url>/2021/12/17/yarn%E4%B8%8D%E6%A3%80%E6%9F%A5node%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>设置全局生效<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn config set ignore-engines true</span><br></pre></td></tr></table></figure></p><p>指定当前命令生效<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn install --ignore-engines</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go mod 下载依赖包代理设置</title>
      <link href="/2021/12/14/Go-mod-%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E5%8C%85%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/12/14/Go-mod-%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E5%8C%85%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">env</span> -w GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>苹果mac近期TNT破解软件“意外退出”解决方案</title>
      <link href="/2021/12/08/%E8%8B%B9%E6%9E%9Cmac%E8%BF%91%E6%9C%9FTNT%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6%E2%80%9C%E6%84%8F%E5%A4%96%E9%80%80%E5%87%BA%E2%80%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2021/12/08/%E8%8B%B9%E6%9E%9Cmac%E8%BF%91%E6%9C%9FTNT%E7%A0%B4%E8%A7%A3%E8%BD%AF%E4%BB%B6%E2%80%9C%E6%84%8F%E5%A4%96%E9%80%80%E5%87%BA%E2%80%9D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>Apple删除了TNT的证书，因此诸多应用程序将在2019年7月12日之后崩溃，出现“意外退出”，无法打开的情况。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>使用<code>codesign</code>自己签名</p><h3 id="命令行代码"><a href="#命令行代码" class="headerlink" title="命令行代码"></a>命令行代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终端中安装xcode小开发工具，如果已经安装可跳过</span></span><br><span class="line">xcode-select --install</span><br><span class="line"><span class="comment"># name替换成你无法打开的软件名，例如 DaisyDisk.app</span></span><br><span class="line">codesign --force --deep --sign - /Applications/name.app</span><br><span class="line"><span class="comment"># 软件后缀有空格的软件需要用 \ 替换空格，例如：CleanMyMac X   →  CleanMyMac\ X</span></span><br><span class="line">codesign --force --deep --sign - /Applications/CleanMyMac\ X.app</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JeecgBoot下拉搜索框异步加载数据</title>
      <link href="/2021/11/16/JeecgBoot%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E6%A1%86%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE/"/>
      <url>/2021/11/16/JeecgBoot%E4%B8%8B%E6%8B%89%E6%90%9C%E7%B4%A2%E6%A1%86%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>JeecgBoot当数据量非常大的时候，下拉搜索框会一次性带出所有数据，导致前端页面卡死，解决办法如下：</p><ol><li>打开前端项目，找到下拉搜索组件，路径：src/components/dict/JSearchSelectTag.vue</li><li>将<code>props</code>里面的参数<code>async: Boolean</code>改成<code>async: &#123;type:Boolean,default:true&#125;</code></li><li>重新编译打包后发布到生产，系统内所有的在线生成的表单下拉搜索组件会变成异步加载。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> JeecgBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker在当前目录运行sftp服务器</title>
      <link href="/2021/06/25/docker%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E8%BF%90%E8%A1%8Csftp%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2021/06/25/docker%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E8%BF%90%E8%A1%8Csftp%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="一行代码启动"><a href="#一行代码启动" class="headerlink" title="一行代码启动"></a>一行代码启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name my_sftp -v `<span class="built_in">pwd</span>`:/home/foo -dp 2222:22 --restart always atmoz/sftp foo:pass:1001</span><br></pre></td></tr></table></figure><h3 id="连接FTP服务器"><a href="#连接FTP服务器" class="headerlink" title="连接FTP服务器"></a>连接FTP服务器</h3><p>创建成功后，通过以下账户即可访问SFTP：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">端口：2222</span><br><span class="line">用户名：foo</span><br><span class="line">密码：pass</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openwrt安装git</title>
      <link href="/2021/05/11/openwrt%E5%AE%89%E8%A3%85git/"/>
      <url>/2021/05/11/openwrt%E5%AE%89%E8%A3%85git/</url>
      
        <content type="html"><![CDATA[<p>Openwrt默认没有安装Git，自带的ssh没有ssh-agent功能，可以通过如下命令配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line"><span class="comment"># 安装Git</span></span><br><span class="line">opkg remove git</span><br><span class="line">opkg install git-http</span><br><span class="line">opkg install ca-bundle</span><br><span class="line"><span class="comment"># 安装SSH</span></span><br><span class="line">opkg install openssh-client openssh-keygen openssh-sftp-server</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx使用try_files和proxy_pass部署前端应用到oss上</title>
      <link href="/2021/04/30/Nginx%E4%BD%BF%E7%94%A8try-files%E5%92%8Cproxy-pass%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8%E5%88%B0oss%E4%B8%8A/"/>
      <url>/2021/04/30/Nginx%E4%BD%BF%E7%94%A8try-files%E5%92%8Cproxy-pass%E9%83%A8%E7%BD%B2%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8%E5%88%B0oss%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<p>部署前端到oss上,既方便通过oss的sdk发布版本，又大大提高访问速度，减少服务器带宽压力</p><h3 id="nginx-conf-配置"><a href="#nginx-conf-配置" class="headerlink" title="nginx.conf 配置"></a>nginx.conf 配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location /deploy/path &#123;</span><br><span class="line">            try_files $uri @redirect;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location @redirect &#123;</span><br><span class="line">            rewrite ^ /oss/path/index.html break;</span><br><span class="line">            proxy_pass http://your-bucket.oss-cn-shenzhen-internal.aliyuncs.com;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行服务"><a href="#运行服务" class="headerlink" title="运行服务"></a>运行服务</h3><p>使用docker运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart always --name your-app-name -v `<span class="built_in">pwd</span>`/nginx.conf:/etc/nginx/nginx.conf:ro -dp 3000:80 nginx</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用命令清理硬盘空间</title>
      <link href="/2021/04/29/Linux%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E7%A1%AC%E7%9B%98%E7%A9%BA%E9%97%B4/"/>
      <url>/2021/04/29/Linux%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B8%85%E7%90%86%E7%A1%AC%E7%9B%98%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出文件或文件夹占用空间大小</span></span><br><span class="line"><span class="built_in">du</span> -h --max-depth=1 your_path</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud 打包指定模块生产环境jar包</title>
      <link href="/2021/04/28/spring-cloud-%E6%89%93%E5%8C%85%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83jar%E5%8C%85/"/>
      <url>/2021/04/28/spring-cloud-%E6%89%93%E5%8C%85%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83jar%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install -am -P prod -pl your-sub-module</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker发布单页(spa)应用</title>
      <link href="/2021/04/27/%E4%BD%BF%E7%94%A8docker%E5%8F%91%E5%B8%83%E5%8D%95%E9%A1%B5-spa-%E5%BA%94%E7%94%A8/"/>
      <url>/2021/04/27/%E4%BD%BF%E7%94%A8docker%E5%8F%91%E5%B8%83%E5%8D%95%E9%A1%B5-spa-%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name your-app-name -dp 8000:80 --restart always -v `<span class="built_in">pwd</span>`:/app zevenfang/nginx-spa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap根据mac查找ip地址</title>
      <link href="/2021/04/27/nmap%E6%A0%B9%E6%8D%AEmac%E6%9F%A5%E6%89%BEip%E5%9C%B0%E5%9D%80/"/>
      <url>/2021/04/27/nmap%E6%A0%B9%E6%8D%AEmac%E6%9F%A5%E6%89%BEip%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sn 192.168.88.0/24 | grep -B2 00:E0:4C:7E:4C:F4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Docker运行SpringBoot项目</title>
      <link href="/2021/04/14/%E4%BD%BF%E7%94%A8Docker%E8%BF%90%E8%A1%8CSpringBoot%E9%A1%B9%E7%9B%AE/"/>
      <url>/2021/04/14/%E4%BD%BF%E7%94%A8Docker%E8%BF%90%E8%A1%8CSpringBoot%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name demo-system -dp 8080:8080 --restart always -v `<span class="built_in">pwd</span>`:/usr/jars openjdk:8 java -jar /usr/jars/demo-system.jar</span><br><span class="line">docker run --name demo-system -dp 8080:8080 --restart always -v `<span class="built_in">pwd</span>`:/usr/jars openjdk:8 java -Xmx1g -jar /usr/jars/demo-system.jar <span class="comment"># 限制内存占用1G</span></span><br></pre></td></tr></table></figure><h3 id="定义函数命令"><a href="#定义函数命令" class="headerlink" title="定义函数命令"></a>定义函数命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --net=host，在多台主机部署，spring gateway 才能访问</span></span><br><span class="line"><span class="keyword">function</span> djar &#123;</span><br><span class="line">    docker run --net=host --name $1_<span class="variable">$2</span> -d -e PORT=<span class="variable">$2</span> --restart always -v `<span class="built_in">pwd</span>`:/usr/jars openjdk:8 java -Xmx500m -jar -Duser.timezone=Asia/Shanghai /usr/jars/<span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">djar demo-system.jar 8080</span><br></pre></td></tr></table></figure><p>再配合<a href="https://github.com/portainer/portainer">Portainer</a>管理，轻松实现微服务部署</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> docker </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git clone 设置临时代理</title>
      <link href="/2021/03/20/git-clone-%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
      <url>/2021/03/20/git-clone-%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一次性代理</span></span><br><span class="line">git <span class="built_in">clone</span> -c http.proxy=<span class="string">&quot;http://127.0.0.1:1087&quot;</span> https://github.com/</span><br><span class="line"><span class="comment"># 全局设置代理</span></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm自动切换国内源</title>
      <link href="/2021/03/19/npm%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/"/>
      <url>/2021/03/19/npm%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm --registry https://registry.npm.taobao.org i your-pack</span><br><span class="line">npm i -g mirror-config-china --registry=https://registry.npm.taobao.org -f</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron安装问题</title>
      <link href="/2021/03/01/Electron%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
      <url>/2021/03/01/Electron%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>解决方案：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在NPM安装期间使用不同版本的python</title>
      <link href="/2021/02/27/%E5%A6%82%E4%BD%95%E5%9C%A8NPM%E5%AE%89%E8%A3%85%E6%9C%9F%E9%97%B4%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84python/"/>
      <url>/2021/02/27/%E5%A6%82%E4%BD%95%E5%9C%A8NPM%E5%AE%89%E8%A3%85%E6%9C%9F%E9%97%B4%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E7%9A%84python/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改npm参数</span></span><br><span class="line">npm install --python=python2.7 <span class="comment"># 使用--python选项</span></span><br><span class="line">npm config <span class="built_in">set</span> python python2.7 <span class="comment"># 设置为默认使用</span></span><br><span class="line"><span class="comment"># 修改环境变量</span></span><br><span class="line"><span class="built_in">export</span> PYTHON=python2.7 <span class="comment"># Linux</span></span><br><span class="line"><span class="built_in">set</span> PYTHON=python2.7 <span class="comment"># Windows</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker直接指定镜像地址下载</title>
      <link href="/2021/02/19/Docker%E7%9B%B4%E6%8E%A5%E6%8C%87%E5%AE%9A%E9%95%9C%E5%83%8F%E5%9C%B0%E5%9D%80%E4%B8%8B%E8%BD%BD/"/>
      <url>/2021/02/19/Docker%E7%9B%B4%E6%8E%A5%E6%8C%87%E5%AE%9A%E9%95%9C%E5%83%8F%E5%9C%B0%E5%9D%80%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.mirrors.ustc.edu.cn/library/ubuntu</span><br><span class="line">docker tag docker.mirrors.ustc.edu.cn/library/ubuntu ubuntu</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决WordPress开启https后资源文件还是访问http问题</title>
      <link href="/2021/02/01/%E8%A7%A3%E5%86%B3WordPress%E5%BC%80%E5%90%AFhttps%E5%90%8E%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AEhttp%E9%97%AE%E9%A2%98/"/>
      <url>/2021/02/01/%E8%A7%A3%E5%86%B3WordPress%E5%BC%80%E5%90%AFhttps%E5%90%8E%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E8%BF%98%E6%98%AF%E8%AE%BF%E9%97%AEhttp%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制开启HTTPS</span></span><br><span class="line"><span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTPS&#x27;</span>] = <span class="string">&#x27;on&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FORCE_SSL_LOGIN&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FORCE_SSL_ADMIN&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="comment"># 设置网站地址</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_HOME&#x27;</span>,<span class="string">&#x27;https://www.yoursite.com&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_SITEURL&#x27;</span>,<span class="string">&#x27;https://www.yoursite.com&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle 使用阿里云镜像源</title>
      <link href="/2020/08/27/Gradle-%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>/2020/08/27/Gradle-%E4%BD%BF%E7%94%A8%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// 插入阿里云镜像源</span></span><br><span class="line">        maven&#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span>&#125;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">&#x27;https://maven.google.com/&#x27;</span></span><br><span class="line">            name <span class="string">&#x27;Google&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        google()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">&#x27;com.android.tools.build:gradle:3.3.2&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// 插入阿里云镜像源</span></span><br><span class="line">        maven&#123; url <span class="string">&#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span>&#125;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">&#x27;https://maven.google.com/&#x27;</span></span><br><span class="line">            name <span class="string">&#x27;Google&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task <span class="title function_">clean</span><span class="params">(type: Delete)</span> &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>yarn 国内加速镜像源</title>
      <link href="/2020/08/16/yarn-%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F%E6%BA%90/"/>
      <url>/2020/08/16/yarn-%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn --registry=https://registry.npm.taobao.org</span><br><span class="line">yarn config <span class="built_in">set</span> ignore-engines <span class="literal">true</span> <span class="comment">#不检查node版本</span></span><br><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span><br><span class="line">yarn config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span><br><span class="line">yarn config <span class="built_in">set</span> sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle 设置全局代理</title>
      <link href="/2020/08/15/Gradle-%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/"/>
      <url>/2020/08/15/Gradle-%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>以下配置使用Mac上shadowsocks默认设置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">org.gradle.jvmargs</span>=-DsocksProxyHost=<span class="number">127.0</span>.<span class="number">0.1</span> -DsocksProxyPort=<span class="number">1086</span> -DsocksNonProxyHosts=*.aliyun.com <span class="comment">#socks5设置</span></span><br><span class="line"><span class="attr">systemProp.http.nonProxyHosts</span>=*.aliyun.com <span class="comment">#阿里云镜像源不需要代理</span></span><br><span class="line"><span class="attr">systemProp.http.proxyHost</span>=<span class="number">127.0</span>.<span class="number">0.1</span> <span class="comment">#http设置</span></span><br><span class="line"><span class="attr">systemProp.http.proxyPort</span>=<span class="number">1087</span> <span class="comment">#http设置</span></span><br><span class="line"><span class="attr">systemProp.https.nonProxyHosts</span>=*.aliyun.com <span class="comment">#阿里云镜像源不需要代理</span></span><br><span class="line"><span class="attr">systemProp.https.proxyHost</span>=<span class="number">127.0</span>.<span class="number">0.1</span> <span class="comment">#https设置</span></span><br><span class="line"><span class="attr">systemProp.https.proxyPort</span>=<span class="number">1087</span> <span class="comment">#https设置</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew国内安装脚本</title>
      <link href="/2020/08/15/Homebrew%E5%9B%BD%E5%86%85%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/08/15/Homebrew%E5%9B%BD%E5%86%85%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用docker快速在当前目录创建ftp账户</title>
      <link href="/2020/06/06/%E5%88%A9%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BAftp%E8%B4%A6%E6%88%B7/"/>
      <url>/2020/06/06/%E5%88%A9%E7%94%A8docker%E5%BF%AB%E9%80%9F%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E5%88%9B%E5%BB%BAftp%E8%B4%A6%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="创建FTP服务器"><a href="#创建FTP服务器" class="headerlink" title="创建FTP服务器"></a>创建FTP服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ftpuser=username <span class="comment"># FTP账户</span></span><br><span class="line"><span class="built_in">export</span> ftppass=password <span class="comment"># FTP密码</span></span><br><span class="line"><span class="built_in">export</span> address=your.server.addr <span class="comment"># FTP连接地址</span></span><br><span class="line">docker run -d --name vsftpd-<span class="variable">$ftpuser</span> \</span><br><span class="line">    -p 20001:21 -p 30001-30010:30001-30010 \</span><br><span class="line">    -v `<span class="built_in">pwd</span>`:/home/vsftpd/<span class="variable">$ftpuser</span>  \</span><br><span class="line">    -e PASV_MIN_PORT=30001 \</span><br><span class="line">    -e PASV_MAX_PORT=30010 \</span><br><span class="line">    -e PASV_ADDRESS=<span class="variable">$address</span> \</span><br><span class="line">    -e PASV_ADDR_RESOLVE=YES \</span><br><span class="line">    -e FTP_USER=<span class="variable">$ftpuser</span> \</span><br><span class="line">    -e FTP_PASS=<span class="variable">$ftppass</span> \</span><br><span class="line">    -e FILE_OPEN_MODE=0777 \</span><br><span class="line">    -e LOCAL_UMASK=022 \</span><br><span class="line">    --restart=always zevenfang/vsftpd</span><br></pre></td></tr></table></figure><h3 id="连接FTP服务器"><a href="#连接FTP服务器" class="headerlink" title="连接FTP服务器"></a>连接FTP服务器</h3><p>创建成功后，通过以下账户即可访问FTP：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">地址：your.server.addr</span><br><span class="line">端口：20001</span><br><span class="line">用户名：username</span><br><span class="line">密码：password</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android SDKManager 自动授权同意证书</title>
      <link href="/2020/06/06/Android-SDKManager-%E8%87%AA%E5%8A%A8%E6%8E%88%E6%9D%83%E5%90%8C%E6%84%8F%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/06/06/Android-SDKManager-%E8%87%AA%E5%8A%A8%E6%8E%88%E6%9D%83%E5%90%8C%E6%84%8F%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>在运行<code>gradle</code>构建脚本时，经常会出现没有同意SDK证书，导致无法完成构建，可以通过以下几行命令自动同意证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_HOME=/your/path/to/android/home</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$ANDROID_HOME</span>/licenses&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n8933bad161af4178b1185d1a37fbf41ea5269c55&quot;</span> &gt; <span class="string">&quot;<span class="variable">$ANDROID_HOME</span>/licenses/android-sdk-license&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n84831b9409646a918e30573bab4c9c91346d8abd&quot;</span> &gt; <span class="string">&quot;<span class="variable">$ANDROID_HOME</span>/licenses/android-sdk-preview-license&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派修改DNS</title>
      <link href="/2020/05/20/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9DNS/"/>
      <url>/2020/05/20/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BF%AE%E6%94%B9DNS/</url>
      
        <content type="html"><![CDATA[<p>树莓派提示域名解析错误，可能是路由器的DNS设置异常了，这时候可以直接修改树莓派的DNS，不通过路由器解析域名，重启树莓派也能生效</p><ul><li>修改dns设置：</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/dhcpcd.conf</span><br></pre></td></tr></table></figure><ul><li>设置文件添加一行配置</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用阿里云DNS</span></span><br><span class="line">static <span class="attr">domain_name_servers</span>=<span class="number">223.5</span>.<span class="number">5.5</span> <span class="number">223.6</span>.<span class="number">6.6</span></span><br></pre></td></tr></table></figure><ul><li>最后重启dhcp服务</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service dhcpcd restart</span><br></pre></td></tr></table></figure><ul><li>测试一下，重启树莓派，也能生效</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Raspberry </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派自定义屏幕分辨率</title>
      <link href="/2020/05/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87/"/>
      <url>/2020/05/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p>有些时候树莓派无法识别到屏幕的正确分辨率，或者有时候需要在没接入屏幕的情况下，想要预先设置分辨率，可以通过一下方法设置：</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>编辑<code>/boot/config.txt</code>在最后面加上如下配置：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hdmi_force_hotplug</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">hdmi_cvt</span>=<span class="number">320</span> <span class="number">240</span> <span class="number">60</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="attr">hdmi_group</span>=<span class="number">2</span></span><br><span class="line"><span class="attr">hdmi_mode</span>=<span class="number">87</span></span><br></pre></td></tr></table></figure></p><h3 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hdmi_cvt=&lt;width&gt; &lt;height&gt; &lt;framerate&gt; &lt;aspect&gt; &lt;margins&gt; &lt;interlace&gt; &lt;rb&gt;</span><br><span class="line">width        width <span class="keyword">in</span> pixels</span><br><span class="line">height       height <span class="keyword">in</span> pixels</span><br><span class="line">framerate    framerate <span class="keyword">in</span> <span class="title class_">Hz</span></span><br><span class="line">aspect       aspect ratio <span class="number">1</span>=<span class="number">4</span>:<span class="number">3</span>, <span class="number">2</span>=<span class="number">14</span>:<span class="number">9</span>, <span class="number">3</span>=<span class="number">16</span>:<span class="number">9</span>, <span class="number">4</span>=<span class="number">5</span>:<span class="number">4</span>, <span class="number">5</span>=<span class="number">16</span>:<span class="number">10</span>, <span class="number">6</span>=<span class="number">15</span>:<span class="number">9</span></span><br><span class="line">margins      <span class="number">0</span>=margins disabled, <span class="number">1</span>=margins enabled</span><br><span class="line">interlace    <span class="number">0</span>=progressive, <span class="number">1</span>=interlaced</span><br><span class="line">rb           <span class="number">0</span>=normal, <span class="number">1</span>=reduced blanking</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页设置科幻感背景</title>
      <link href="/2020/05/06/%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE%E7%A7%91%E5%B9%BB%E6%84%9F%E8%83%8C%E6%99%AF/"/>
      <url>/2020/05/06/%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE%E7%A7%91%E5%B9%BB%E6%84%9F%E8%83%8C%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;/images/bg.gif&quot;</span>) repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用图片"><a href="#使用图片" class="headerlink" title="使用图片"></a>使用图片</h3><p><img src="/images/bg.gif" alt="bg"></p><style>body {    background: url("/images/bg.gif") repeat!important;}</style>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用openssl生成rsa私钥、公钥和证书</title>
      <link href="/2020/04/21/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90rsa%E7%A7%81%E9%92%A5%E3%80%81%E5%85%AC%E9%92%A5%E5%92%8C%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/04/21/%E4%BD%BF%E7%94%A8openssl%E7%94%9F%E6%88%90rsa%E7%A7%81%E9%92%A5%E3%80%81%E5%85%AC%E9%92%A5%E5%92%8C%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl <span class="comment"># 启动</span></span><br><span class="line">OpenSSL&gt; genrsa -out rsa_private_key.pem 2048 <span class="comment"># 产生私钥</span></span><br><span class="line">OpenSSL&gt; rsa -<span class="keyword">in</span> rsa_private_key.pem -pubout -out rsa_public_key.pem <span class="comment"># 产生公钥</span></span><br><span class="line">openssl req -new -key rsa_private_key.pem -out zeven.csr <span class="comment"># 生成证书</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派旋转电容触摸方向</title>
      <link href="/2020/04/10/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%97%8B%E8%BD%AC%E7%94%B5%E5%AE%B9%E8%A7%A6%E6%91%B8%E6%96%B9%E5%90%91/"/>
      <url>/2020/04/10/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%97%8B%E8%BD%AC%E7%94%B5%E5%AE%B9%E8%A7%A6%E6%91%B8%E6%96%B9%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h3 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h3><ul><li>安装<code>libinput</code></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xserver-xorg-input-libinput</span><br></pre></td></tr></table></figure><ul><li>在<code>/etc/X11/</code>下创建<code>xorg.conf.d</code>目录 (如果该目录已存在，则直接进行第3步)</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /etc/X11/xorg.conf.d</span><br></pre></td></tr></table></figure><ul><li>复制<code>40-libinput-conf</code>文件到刚刚创建的目录下</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /usr/share/X11/xorg.conf.d/40-libinput.conf /etc/X11/xorg.conf.d/</span><br></pre></td></tr></table></figure><h3 id="编辑配置"><a href="#编辑配置" class="headerlink" title="编辑配置"></a>编辑配置</h3><ul><li>编辑配置文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/X11/xorg.conf.d/40-libinput.conf</span><br></pre></td></tr></table></figure><ul><li>找到<code>touchscreen</code>的部分，在里面添加以下语句</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Option <span class="string">&quot;CalibrationMatrix&quot;</span> <span class="string">&quot;0 1 0 -1 0 1 0 0 1&quot;</span></span><br></pre></td></tr></table></figure><p>如图所示：</p><p><img src="https://raw.githubusercontent.com/ZevenFang/assets/master/fangzf.me/images/libinput.png" alt="libinput"></p><ul><li>重启树莓派</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h3 id="其他旋转角度参数"><a href="#其他旋转角度参数" class="headerlink" title="其他旋转角度参数"></a>其他旋转角度参数</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Option <span class="string">&quot;CalibrationMatrix&quot;</span> <span class="string">&quot;1 0 0 0 1 0 0 0 1&quot;</span>   <span class="comment"># 0度旋转对应参数</span></span><br><span class="line">Option <span class="string">&quot;CalibrationMatrix&quot;</span> <span class="string">&quot;0 1 0 -1 0 1 0 0 1&quot;</span>  <span class="comment"># 90度旋转对应参数</span></span><br><span class="line">Option <span class="string">&quot;CalibrationMatrix&quot;</span> <span class="string">&quot;-1 0 1 0 -1 1 0 0 1&quot;</span> <span class="comment"># 180度旋转对应参数</span></span><br><span class="line">Option <span class="string">&quot;CalibrationMatrix&quot;</span> <span class="string">&quot;0 -1 1 1 0 0 0 0 1&quot;</span>  <span class="comment"># 270度旋转对应参数</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Raspberry </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用yrm更换yarn源</title>
      <link href="/2020/03/21/%E4%BD%BF%E7%94%A8yrm%E6%9B%B4%E6%8D%A2yarn%E6%BA%90/"/>
      <url>/2020/03/21/%E4%BD%BF%E7%94%A8yrm%E6%9B%B4%E6%8D%A2yarn%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yrm use taobao</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pidcat查看logcat日志</title>
      <link href="/2020/03/20/pidcat%E6%9F%A5%E7%9C%8Blogcat%E6%97%A5%E5%BF%97/"/>
      <url>/2020/03/20/pidcat%E6%9F%A5%E7%9C%8Blogcat%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidcat com.your.pack</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>wget整站下载命令</title>
      <link href="/2020/03/19/wget%E6%95%B4%E7%AB%99%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/19/wget%E6%95%B4%E7%AB%99%E4%B8%8B%E8%BD%BD%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -r -p -np -k http://example.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>chromium-browser常用命令</title>
      <link href="/2020/03/14/chromium-browser%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/03/14/chromium-browser%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="运行命令："><a href="#运行命令：" class="headerlink" title="运行命令："></a>运行命令：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">chromium-browser</span><br><span class="line">--remote-debugging-port=9000 <span class="comment"># 远程Debug调试</span></span><br><span class="line">--user-data-dir=/home/user/.cache/chromium/Default/MyCache <span class="comment"># 指定缓存目录</span></span><br><span class="line">--disk-cache-dir=/dev/null --disk-cache-size=1 <span class="comment"># 禁止缓存</span></span><br><span class="line">--disable-web-security <span class="comment"># 允许在https下调用http的接口</span></span><br><span class="line">--allow-running-insecure-content <span class="comment"># 允许在https下加载http的静态资源</span></span><br><span class="line">--disable-popup-blocking <span class="comment"># 禁止弹窗</span></span><br><span class="line">--no-first-run <span class="comment"># 跳过首次运行检测</span></span><br><span class="line">--disable-desktop-notifications <span class="comment"># 禁止桌面通知</span></span><br><span class="line">--check-for-update-interval=31104000 <span class="comment"># 禁止检查更新</span></span><br><span class="line">--kiosk <span class="comment"># 独占模式，要按CTRL+F4，才能退出</span></span><br><span class="line">--app=<span class="string">&quot;http://192.168.1.88:8888/&quot;</span> <span class="comment"># app模式，可以屏蔽异常退出的崩溃提示</span></span><br><span class="line">--unsafely-treat-insecure-origin-as-secure=<span class="string">&quot;http://192.168.1.88:8888/&quot;</span></span><br><span class="line"><span class="comment"># 指定地址无视安全策略，用于测试麦克风摄像头等需要无视https的场景</span></span><br></pre></td></tr></table></figure><h3 id="远程调试："><a href="#远程调试：" class="headerlink" title="远程调试："></a>远程调试：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@192.168.1.88 -L 9000:localhost:9001</span><br></pre></td></tr></table></figure><p>本地访问<code>http://localhost:9001</code>即可远程调试</p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB转换ObjectId为String字段</title>
      <link href="/2020/01/12/MongoDB%E8%BD%AC%E6%8D%A2ObjectId%E4%B8%BAString%E5%AD%97%E6%AE%B5/"/>
      <url>/2020/01/12/MongoDB%E8%BD%AC%E6%8D%A2ObjectId%E4%B8%BAString%E5%AD%97%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<p>新增一个id字段，将_id转换为String字段：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">collName</span>.<span class="title function_">find</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">doc</span> =&gt;</span> &#123;</span><br><span class="line">    db.<span class="property">collName</span>.<span class="title function_">update</span>(&#123;<span class="attr">_id</span>: doc.<span class="property">_id</span>&#125;, &#123;</span><br><span class="line">        <span class="attr">$set</span>: &#123;<span class="attr">id</span>: <span class="title class_">String</span>(doc.<span class="property">_id</span>.<span class="property">str</span>)&#125; </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ufw防火墙命令</title>
      <link href="/2019/10/30/ufw%E9%98%B2%E7%81%AB%E5%A2%99%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/10/30/ufw%E9%98%B2%E7%81%AB%E5%A2%99%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><ul><li>下载地址：<a href="https://launchpad.net/ufw/">https://launchpad.net/ufw/</a></li><li>安装程序：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf ufw-0.36.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ufw-0.36</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li></ul><h3 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h3><ul><li>开启ufw<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br><span class="line">ufw default deny</span><br></pre></td></tr></table></figure></li><li>查看防火墙状态<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status </span><br></pre></td></tr></table></figure></li><li>开启/禁用相应端口或服务举例<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80 <span class="comment"># 允许外部访问80端口</span></span><br><span class="line">ufw delete allow 80 <span class="comment"># 禁止外部访问80端口</span></span><br><span class="line">ufw allow from 192.168.1.1 <span class="comment"># 允许此IP访问所有的本机端口</span></span><br><span class="line">ufw deny smtp <span class="comment"># 禁止外部访问smtp服务</span></span><br><span class="line">ufw delete allow smtp <span class="comment"># 删除上面建立的某条规则</span></span><br><span class="line">ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 22 <span class="comment"># 要拒绝所有的TCP流量从10.0.0.0/8 到192.168.0.1地址的22端口</span></span><br></pre></td></tr></table></figure></li><li>可以允许所有RFC1918网络（局域网/无线局域网的）访问这个主机（/8,/16,/12是一种网络分级）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw allow from 10.0.0.0/8</span><br><span class="line">ufw allow from 172.16.0.0/12</span><br><span class="line">ufw allow from 192.168.0.0/16</span><br></pre></td></tr></table></figure></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>关闭IPv6<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/default/ufw <span class="comment"># IPV6=yes 改成 IPV6=no</span></span><br><span class="line">ufw reload <span class="comment"># 重新加载配置</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启Android无线ADB</title>
      <link href="/2019/10/06/%E5%BC%80%E5%90%AFAndroid%E6%97%A0%E7%BA%BFADB/"/>
      <url>/2019/10/06/%E5%BC%80%E5%90%AFAndroid%E6%97%A0%E7%BA%BFADB/</url>
      
        <content type="html"><![CDATA[<p>此方法无需手机ROOT，就可以实现无线ADB，首先将手机通过USB连接上电脑，运行以下命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb tcpip 5555 <span class="comment"># 打开设备ADB端口</span></span><br><span class="line">adb connect DEVICE_IP:5555 <span class="comment"># 连接设备，将DEVICE_IP替换成相应的IP</span></span><br></pre></td></tr></table></figure><br>最后拔掉USB数据线，就可以启用无线ADB了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派GPIO引脚图</title>
      <link href="/2019/07/15/%E6%A0%91%E8%8E%93%E6%B4%BEGPIO%E5%BC%95%E8%84%9A%E5%9B%BE/"/>
      <url>/2019/07/15/%E6%A0%91%E8%8E%93%E6%B4%BEGPIO%E5%BC%95%E8%84%9A%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>引脚图如下，详细图参考 <a href="https://pinout.xyz/">https://pinout.xyz/</a></p><p><img src="https://raw.githubusercontent.com/ZevenFang/assets/master/fangzf.me/images/gpio.png" alt="gpio"></p>]]></content>
      
      
      <categories>
          
          <category> Raspberry </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>树莓派读取DHT11温湿度模块-Python</title>
      <link href="/2019/07/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%AF%BB%E5%8F%96DHT11%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%A8%A1%E5%9D%97-Python/"/>
      <url>/2019/07/14/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%AF%BB%E5%8F%96DHT11%E6%B8%A9%E6%B9%BF%E5%BA%A6%E6%A8%A1%E5%9D%97-Python/</url>
      
        <content type="html"><![CDATA[<p>使用Python读取DHT11温湿度模块，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">channel = <span class="number">9</span></span><br><span class="line">data = []</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line">GPIO.setup(channel, GPIO.OUT)</span><br><span class="line">GPIO.output(channel, GPIO.LOW)</span><br><span class="line">time.sleep(<span class="number">0.02</span>)</span><br><span class="line">GPIO.output(channel, GPIO.HIGH)</span><br><span class="line">GPIO.setup(channel, GPIO.IN)</span><br><span class="line"><span class="keyword">while</span> GPIO.<span class="built_in">input</span>(channel) == GPIO.LOW:</span><br><span class="line">  <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">while</span> GPIO.<span class="built_in">input</span>(channel) == GPIO.HIGH:</span><br><span class="line">  <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">while</span> j &lt; <span class="number">40</span>:</span><br><span class="line">  k = <span class="number">0</span></span><br><span class="line">  <span class="keyword">while</span> GPIO.<span class="built_in">input</span>(channel) == GPIO.LOW:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  <span class="keyword">while</span> GPIO.<span class="built_in">input</span>(channel) == GPIO.HIGH:</span><br><span class="line">    k += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> k &gt; <span class="number">100</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">if</span> k &lt; <span class="number">8</span>:</span><br><span class="line">    data.append(<span class="number">0</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    data.append(<span class="number">1</span>)</span><br><span class="line">  j += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;sensor is working.&quot;</span></span><br><span class="line"><span class="built_in">print</span> data</span><br><span class="line">humidity_bit = data[<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">humidity_point_bit = data[<span class="number">8</span>:<span class="number">16</span>]</span><br><span class="line">temperature_bit = data[<span class="number">16</span>:<span class="number">24</span>]</span><br><span class="line">temperature_point_bit = data[<span class="number">24</span>:<span class="number">32</span>]</span><br><span class="line">check_bit = data[<span class="number">32</span>:<span class="number">40</span>]</span><br><span class="line">humidity = <span class="number">0</span></span><br><span class="line">humidity_point = <span class="number">0</span></span><br><span class="line">temperature = <span class="number">0</span></span><br><span class="line">temperature_point = <span class="number">0</span></span><br><span class="line">check = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">  humidity += humidity_bit[i] * <span class="number">2</span> ** (<span class="number">7</span>-i)</span><br><span class="line">  humidity_point += humidity_point_bit[i] * <span class="number">2</span> ** (<span class="number">7</span>-i)</span><br><span class="line">  temperature += temperature_bit[i] * <span class="number">2</span> ** (<span class="number">7</span>-i)</span><br><span class="line">  temperature_point += temperature_point_bit[i] * <span class="number">2</span> ** (<span class="number">7</span>-i)</span><br><span class="line">  check += check_bit[i] * <span class="number">2</span> ** (<span class="number">7</span>-i)</span><br><span class="line">tmp = humidity + humidity_point + temperature + temperature_point</span><br><span class="line"><span class="keyword">if</span> check == tmp:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;temperature :&quot;</span>, temperature, <span class="string">&quot;*C, humidity :&quot;</span>, humidity, <span class="string">&quot;%&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;wrong&quot;</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;temperature :&quot;</span>, temperature, <span class="string">&quot;*C, humidity :&quot;</span>, humidity, <span class="string">&quot;% check :&quot;</span>, check, <span class="string">&quot;, tmp :&quot;</span>, tmp</span><br><span class="line">GPIO.cleanup()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Raspberry </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress 替换 google fonts 字体</title>
      <link href="/2019/07/11/wordpress-%E6%9B%BF%E6%8D%A2-google-fonts-%E5%AD%97%E4%BD%93/"/>
      <url>/2019/07/11/wordpress-%E6%9B%BF%E6%8D%A2-google-fonts-%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<p>google fonts 在国内无法正常访问，WordPress可以通过下面的办法来解决问题</p><h4 id="以下三个办法任选其一："><a href="#以下三个办法任选其一：" class="headerlink" title="以下三个办法任选其一："></a>以下三个办法任选其一：</h4><ul><li>替换为 geekzu 库 <a href="https://wordpress.org/plugins/useso-take-over-google/">https://wordpress.org/plugins/useso-take-over-google/</a></li><li>自己反代 <a href="https://dallaslu.com/wordpress-mu-google-libraries-proxy/">https://dallaslu.com/wordpress-mu-google-libraries-proxy/</a></li><li>移除 Google Fonts <a href="https://wordpress.org/plugins/remove-google-fonts-references/">https://wordpress.org/plugins/remove-google-fonts-references/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux一行命令查找并杀掉进程</title>
      <link href="/2019/06/28/Linux%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%9F%A5%E6%89%BE%E5%B9%B6%E6%9D%80%E6%8E%89%E8%BF%9B%E7%A8%8B/"/>
      <url>/2019/06/28/Linux%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%9F%A5%E6%89%BE%E5%B9%B6%E6%9D%80%E6%8E%89%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep redis | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><p>grep 查询并显示 -v 是不包括</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks Kcptun</title>
      <link href="/2019/06/03/shadow-kcptun/"/>
      <url>/2019/06/03/shadow-kcptun/</url>
      
        <content type="html"><![CDATA[<h3 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</span><br><span class="line">sh shadowsocks-all.sh</span><br></pre></td></tr></table></figure><p><a href="https://raw.githubusercontent.com/ZevenFang/assets/master/fangzf.me/files/shadowsocks-all.sh">shadowsocks-all.sh</a></p><h3 id="Kcptun"><a href="#Kcptun" class="headerlink" title="Kcptun"></a>Kcptun</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/kuoruan/shell-scripts/raw/master/kcptun/kcptun.sh</span><br><span class="line">sh kcptun.sh</span><br></pre></td></tr></table></figure><p><a href="https://raw.githubusercontent.com/ZevenFang/assets/master/fangzf.me/files/kcptun.sh">kcptun.sh</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Base64 转 文件下载</title>
      <link href="/2018/11/21/Base64-%E8%BD%AC-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2018/11/21/Base64-%E8%BD%AC-%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<ol><li>将下面代码另存为html文件</li><li>用浏览器打开</li><li>点击下载</li></ol><p>代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>输入base64字符串<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;base64text&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>输入文件名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;filename&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnGenerate&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;btnDownload&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> base64text = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;base64text&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> filename = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;filename&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btnGenerate = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btnGenerate&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btnDownload = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btnDownload&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> <span class="variable constant_">MIME</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;application/x-zip-compressed&quot;</span>: <span class="string">&quot;zip&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;application/javascript&quot;</span>: <span class="string">&quot;js&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;text/css&quot;</span>: <span class="string">&quot;css&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;text/plain&quot;</span>: <span class="string">&quot;txt&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;text/html&quot;</span>: <span class="string">&quot;html&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;text/xml&quot;</span>: <span class="string">&quot;xml&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;image/jpeg&quot;</span>: <span class="string">&quot;jpeg&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;image/png&quot;</span>: <span class="string">&quot;png&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;image/gif&quot;</span>: <span class="string">&quot;gif&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="string">&quot;image/svg+xml&quot;</span>: <span class="string">&quot;svg&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//文件名默认当前时间戳</span></span></span><br><span class="line"><span class="language-javascript">        filename.<span class="property">value</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//检测点击下载按钮</span></span></span><br><span class="line"><span class="language-javascript">        btnGenerate.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> fname = filename.<span class="property">value</span> + <span class="string">&quot;.&quot;</span> + <span class="variable constant_">MIME</span>[<span class="title function_">getContentType</span>(base64text.<span class="property">value</span>)];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> blob = <span class="title function_">getBlob</span>(base64text.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (navigator.<span class="property">msSaveBlob</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                navigator.<span class="title function_">msSaveBlob</span>(blob, fname);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                btnDownload.<span class="property">download</span> = fname;</span></span><br><span class="line"><span class="language-javascript">                btnDownload.<span class="property">href</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span></span><br><span class="line"><span class="language-javascript">                btnDownload.<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * 获取Blob</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">stirng</span>&#125; <span class="variable">base64</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getBlob</span>(<span class="params">base64</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="title function_">b64toBlob</span>(<span class="title function_">getData</span>(base64), <span class="title function_">getContentType</span>(base64));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * 获取文件类型</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">base64</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getContentType</span>(<span class="params">base64</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="regexp">/data:([^;]*);/i</span>.<span class="title function_">exec</span>(base64)[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * 获取base64中的数据</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">base64</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params">base64</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> base64.<span class="title function_">substr</span>(base64.<span class="title function_">indexOf</span>(<span class="string">&quot;base64,&quot;</span>) + <span class="number">7</span>, base64.<span class="property">length</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * base64转Blob</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">b64Data</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">contentType</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">sliceSize</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">b64toBlob</span>(<span class="params">b64Data, contentType, sliceSize</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            contentType = contentType || <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            sliceSize = sliceSize || <span class="number">512</span>;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> byteCharacters = <span class="title function_">atob</span>(b64Data);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> byteArrays = [];</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> offset = <span class="number">0</span>; offset &lt; byteCharacters.<span class="property">length</span>; offset += sliceSize) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> slice = byteCharacters.<span class="title function_">slice</span>(offset, offset + sliceSize);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> byteNumbers = <span class="keyword">new</span> <span class="title class_">Array</span>(slice.<span class="property">length</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; slice.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    byteNumbers[i] = slice.<span class="title function_">charCodeAt</span>(i);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> byteArray = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(byteNumbers);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">                byteArrays.<span class="title function_">push</span>(byteArray);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>(byteArrays, &#123; <span class="attr">type</span>: contentType &#125;);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> blob;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>演示地址：<a href="http://fangzf.me/html/base64ToFile.html">base64ToFile</a></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab出现502异常解决方法</title>
      <link href="/2018/10/28/Gitlab%E5%87%BA%E7%8E%B0502%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2018/10/28/Gitlab%E5%87%BA%E7%8E%B0502%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>服务器重启后，访问gitlab出现502异常，出现如下界面：<br><img src="https://gitlab.com/gitlab-org/gitlab-ce/uploads/4ec43910ae033d50398db0240bbddee1/502.PNG" alt="502"></p><p>解决方法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl stop <span class="comment"># 暂停gitlab</span></span><br><span class="line">vim /etc/gitlab/gitlab.rb  <span class="comment"># 修改gitlab配置</span></span><br><span class="line">gitlab-ctl reconfigure <span class="comment"># 重新生成配置</span></span><br><span class="line">gitlab-ctl restart <span class="comment"># 重启gitlab</span></span><br></pre></td></tr></table></figure></p><p>以上列举了一些常用的命令，对于有时候服务器重启出现502异常，只需要运行<code>gitlab-ctl restart</code>重启一遍就好了</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap 实用技巧</title>
      <link href="/2018/10/26/nmap-%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2018/10/26/nmap-%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>进行ping扫描，输出所有响应的主机IP：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP 172.17.148.0/24</span><br></pre></td></tr></table></figure><br>扫描指定主机的开放端口，系统版本等信息：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A 192.168.1.6</span><br></pre></td></tr></table></figure><br>UDP扫描（需要root权限，且速度慢）：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sU 192.168.1.0/24</span><br></pre></td></tr></table></figure><br>SYN扫描（需要root权限）：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sS 192.168.1.0/24</span><br></pre></td></tr></table></figure><br>扫描指定IP开放端口号（需要root权限）：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -p- -v 192.168.1.100 <span class="comment"># -p-为全端口扫描，和[1-65535]一样，不使用默认Nmap认为危险的100个端口号</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br>扫描指定IP所开端口及服务版本：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -v 192.168.1.100</span><br><span class="line">sudo nmap -sS -p22 --open 192.168.1.* <span class="comment"># 扫描局域网的22端口</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 配置 SSL 虚拟主机</title>
      <link href="/2017/12/22/Nginx-%E9%85%8D%E7%BD%AE-SSL-%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
      <url>/2017/12/22/Nginx-%E9%85%8D%E7%BD%AE-SSL-%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>直接上代码，server 配置如下，同时支持 http 和 https 访问：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span> default;     <span class="comment"># 配置默认端口</span></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;          <span class="comment"># 配置 ssl 端口</span></span><br><span class="line">    <span class="attribute">server_name</span>  your.server.name; <span class="comment"># 配置解析域名</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>      /etc/letsencrypt/live/your.server.name/fullchain.pem; <span class="comment"># 证书位置</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  /etc/letsencrypt/live/your.server.name/privkey.pem;   <span class="comment"># 私钥位置</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>; </span><br><span class="line">    <span class="attribute">ssl_protocols</span>  SSLv2 SSLv3 TLSv1; <span class="comment"># 指定密码为openssl支持的格式 </span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;    <span class="comment"># 密码加密方式 </span></span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span>   <span class="literal">on</span>;   <span class="comment"># 依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码 </span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># if ($server_port != 443) &#123; # 通过判断端口，强制访问https</span></span><br><span class="line">    <span class="comment">#     rewrite (.*) https://$host$1 permanent;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   html/your.server.name; <span class="comment"># 根目录的相对位置 </span></span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="section">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>另外还可以使用如下配置实现<code>http</code>重定向到<code>https</code><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  your.server.name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 permanent;</span></span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span>  https://<span class="variable">$host</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span>; <span class="comment"># 监听端口为443 </span></span><br><span class="line">    <span class="attribute">server_name</span>  your.server.name;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl</span>                  <span class="literal">on</span>; <span class="comment"># 开启ssl </span></span><br><span class="line">    <span class="attribute">ssl_certificate</span>      /etc/letsencrypt/live/your.server.name/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  /etc/letsencrypt/live/your.server.name/privkey.pem;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_protocols</span>  SSLv2 SSLv3 TLSv1;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span>  HIGH:!aNULL:!MD5;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span>   <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123; </span><br><span class="line">        <span class="attribute">root</span>   html/your.server.name;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 frp 实现内网穿透</title>
      <link href="/2017/12/16/%E4%BD%BF%E7%94%A8-frp-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2017/12/16/%E4%BD%BF%E7%94%A8-frp-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>开发过程中，可能会遇到接入第三方平台时，比如微信公众平台，需要提供公网的 IP 地址或域名的情况。<br>大多数情况下，个人用户的网络是处在局域网中，并且线路无法提供公网的 IP。<br>为了方便调试，这时候就需要通过内网穿透将本地的端口映射到公网上。<br>本篇文章将介绍通过 frp 将本地的 http 服务映射到公网上。</p><h3 id="frp-介绍"><a href="#frp-介绍" class="headerlink" title="frp 介绍"></a>frp 介绍</h3><blockquote><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。</p></blockquote><p>文档地址：<a href="https://github.com/fatedier/frp/blob/master/README_zh.md">https://github.com/fatedier/frp/blob/master/README_zh.md</a><br>下载地址：<a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><ol><li>配置 <code>frps.ini</code> 文件<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span> <span class="comment"># frp 代理端口</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">80</span> <span class="comment"># http 服务端口</span></span><br><span class="line"><span class="attr">vhost_https_port</span> = <span class="number">443</span> <span class="comment"># https 服务端口</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span> <span class="comment"># 开启控制台端口，如果不设置 dashboard_user，默认为 admin</span></span><br><span class="line"><span class="attr">dashboard_user</span> = username <span class="comment"># 控制台用户名</span></span><br><span class="line"><span class="attr">dashboard_pwd</span> = password <span class="comment"># 控制台密码</span></span><br></pre></td></tr></table></figure></li><li>运行 frp 服务端<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure></li></ol><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><ol><li>配置 <code>frpc.ini</code> 文件 <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = your.server.ip.address <span class="comment"># 服务端公网 ip 地址</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span> <span class="comment"># 与服务端配置的 bind_port 一致</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http <span class="comment"># 支持 http 和 https</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span> <span class="comment"># 本地映射端口</span></span><br><span class="line"><span class="attr">custom_domains</span> = your.server.name <span class="comment"># 自定义域名，需要A解析到 server_addr</span></span><br></pre></td></tr></table></figure></li><li>运行 frp 客户端<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure></li></ol><h3 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h3><p>在做完以上配置之后，即可访问本地穿透的服务：</p><ul><li>直接通过 your.server.ip.address 或 your.server.name 访问本地的 http 服务</li><li>访问 your.server.ip.address:7500 或 your.server.name:7500 访问 frp 控制台</li></ul>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>react-native 集成微信支付</title>
      <link href="/2017/12/11/react-native-%E9%9B%86%E6%88%90%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
      <url>/2017/12/11/react-native-%E9%9B%86%E6%88%90%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<p>上篇文章已经介绍过 <a href="http://fangzf.me/2017/12/05/react-native-%E9%9B%86%E6%88%90%E6%94%AF%E4%BB%98%E5%AE%9D/">react-native 集成支付宝</a>，本篇文章将基于微信支付官方提供的集成文档，介绍如何将微信支付集成到 react-native 应用中。</p><h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><blockquote><p>适用于商户在移动端APP中集成微信支付功能。<br>商户APP调用微信提供的SDK调用微信支付模块，商户APP会跳转到微信中完成支付。<br>支付完后跳回到商户APP内，最后展示支付结果。<br>目前微信支付支持手机系统有：IOS（苹果）、Android（安卓）和WP（Windows Phone）。</p></blockquote><h2 id="集成SDK"><a href="#集成SDK" class="headerlink" title="集成SDK"></a>集成SDK</h2><p>获取APPID：商户在<a href="https://open.weixin.qq.com/">微信开放平台</a>申请开发APP应用后，微信开放平台会生成APP的唯一标识APPID。</p><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ol><li>后台设置<br>商户在微信开放平台申请开发应用后，微信开放平台会生成APP的唯一标识APPID。由于需要保证支付安全，需要在开放平台绑定商户应用包名和应用签名，设置好后才能正常发起支付。设置界面在【开放平台】中的栏目【管理中心 / 修改应用 / 修改开发信息】里面，如下图红框内所示。<br><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_5_2.png" alt=""><br>应用签名获取可以使用：<a href="https://open.weixin.qq.com/zh_CN/htmledition/res/dev/download/sdk/Gen_Signature_Android.apk">应用签名获取工具</a>，将安装包安装到手机里，输入应用包名即可获取到签名。<br><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_5_3.png" alt=""><br>这里有个调试技巧，可以将应用的签名改为 debug 版本的签名，等支付调试完成后再改为生产环境的签名。</li><li>导入微信SDK，修改<code>android/app/build.gradle</code>添加如下代码：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    ......</span><br><span class="line">    compile <span class="string">&quot;com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+&quot;</span></span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在<code>com.xx.xx</code>创建包名<code>wxapi</code>，<strong>注意此处包名一定要为<code>wxapi</code>，否则后续将无法处理回调</strong></li><li>编写 Module，在<code>com.xx.xx.wxapi</code>包下创建<code>WxpayModule.java</code>，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xx.xx.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Promise;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactMethod;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReadableMap;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelpay.PayReq;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WxpayModule</span> <span class="keyword">extends</span> <span class="title class_">ReactContextBaseJavaModule</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> IWXAPI api;</span><br><span class="line">  <span class="keyword">static</span> <span class="type">String</span> <span class="variable">APP_ID</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="type">Promise</span> <span class="variable">promise</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  WxpayModule(ReactApplicationContext reactContext) &#123;</span><br><span class="line">    <span class="built_in">super</span>(reactContext);</span><br><span class="line">    api = WXAPIFactory.createWXAPI(reactContext, <span class="literal">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Wxpay&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ReactMethod</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registerApp</span><span class="params">(String APP_ID)</span> &#123; <span class="comment">// 向微信注册</span></span><br><span class="line">    WxpayModule.APP_ID = APP_ID;</span><br><span class="line">    api.registerApp(APP_ID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ReactMethod</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pay</span><span class="params">(<span class="keyword">final</span> ReadableMap order, Promise promise)</span> &#123;</span><br><span class="line">    WxpayModule.promise = promise;</span><br><span class="line">    <span class="type">PayReq</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayReq</span>();</span><br><span class="line">    request.appId = order.getString(<span class="string">&quot;appid&quot;</span>);</span><br><span class="line">    request.partnerId = order.getString(<span class="string">&quot;partnerid&quot;</span>);</span><br><span class="line">    request.prepayId= order.getString(<span class="string">&quot;prepayid&quot;</span>);</span><br><span class="line">    request.packageValue = order.getString(<span class="string">&quot;package&quot;</span>);</span><br><span class="line">    request.nonceStr= order.getString(<span class="string">&quot;noncestr&quot;</span>);</span><br><span class="line">    request.timeStamp= order.getInt(<span class="string">&quot;timestamp&quot;</span>)+<span class="string">&quot;&quot;</span>;</span><br><span class="line">    request.sign= order.getString(<span class="string">&quot;sign&quot;</span>);</span><br><span class="line">    api.sendReq(request);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ReactMethod</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">isSupported</span><span class="params">(Promise promise)</span> &#123; <span class="comment">// 判断是否支持调用微信SDK</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isSupported</span> <span class="operator">=</span> api.isWXAppInstalled();</span><br><span class="line">    promise.resolve(isSupported);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>编写 Package，在<code>com.xx.xx.wxapi</code>包下创建<code>WxpayPackage.java</code>，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xx.xx.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.react.ReactPackage;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.NativeModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.uimanager.ViewManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxpayPackage</span> <span class="keyword">implements</span> <span class="title class_">ReactPackage</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;ViewManager&gt; <span class="title function_">createViewManagers</span><span class="params">(ReactApplicationContext reactContext)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;NativeModule&gt; <span class="title function_">createNativeModules</span><span class="params">(</span></span><br><span class="line"><span class="params">          ReactApplicationContext reactContext)</span> &#123;</span><br><span class="line">    List&lt;NativeModule&gt; modules = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    modules.add(<span class="keyword">new</span> <span class="title class_">WxpayModule</span>(reactContext));</span><br><span class="line">    <span class="keyword">return</span> modules;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>编写 WXPayEntryActivity 处理微信支付回调，在<code>com.xx.xx.wxapi</code>包下创建<code>WXPayEntryActivity.java</code>，<strong>注意包名或类名不一致会造成无法回调</strong>，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xx.xx.wxapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Arguments;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.WritableMap;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.constants.ConstantsAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseReq;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.modelbase.BaseResp;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPI;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.IWXAPIEventHandler;</span><br><span class="line"><span class="keyword">import</span> com.tencent.mm.opensdk.openapi.WXAPIFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WXPayEntryActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> <span class="keyword">implements</span> <span class="title class_">IWXAPIEventHandler</span> &#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;WXPayEntryActivity&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> IWXAPI api;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">      api = WXAPIFactory.createWXAPI(<span class="built_in">this</span>, WxpayModule.APP_ID);</span><br><span class="line">        api.handleIntent(getIntent(), <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onNewIntent</span><span class="params">(Intent intent)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onNewIntent(intent);</span><br><span class="line">    setIntent(intent);</span><br><span class="line">        api.handleIntent(intent, <span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReq</span><span class="params">(BaseReq req)</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResp</span><span class="params">(BaseResp resp)</span> &#123;</span><br><span class="line">    Log.d(TAG, <span class="string">&quot;onPayFinish, errCode = &quot;</span> + resp.errCode);</span><br><span class="line">    <span class="keyword">if</span> (resp.getType() == ConstantsAPI.COMMAND_PAY_BY_WX) &#123;</span><br><span class="line">      <span class="type">WritableMap</span> <span class="variable">map</span> <span class="operator">=</span> Arguments.createMap();</span><br><span class="line">      map.putInt(<span class="string">&quot;errCode&quot;</span>, resp.errCode);</span><br><span class="line">      WxpayModule.promise.resolve(map);</span><br><span class="line">      finish();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>最后在 Android 这边要做的最后一件事就是注册这个模块，在<code>com.xx.xx.MainApplication</code>中注册模块：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> List&lt;ReactPackage&gt; <span class="title function_">getPackages</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MainReactPackage</span>(),</span><br><span class="line">        <span class="comment">// ...other packages</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">WxpayPackage</span>() <span class="comment">// &lt;-- 注册模块</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3></li><li>项目设置APPID，在Xcode中打开项目，设置项目属性中的URL Schemes为你的APPID。如图标红位置所示：<br><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_5_1.png" alt=""></li><li>添加微信白名单<br><code>info.plist</code> –&gt; 右击 –&gt; <code>open as</code>  –&gt; <code>source Code</code> –&gt; 添加白名单，如下图所示：<br><img src="http://p0gxdxnc4.bkt.clouddn.com/2017-12-11-14-28-10.png" alt="2017-12-11-14-28-10"><br>代码如下：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>LSApplicationQueriesSchemes<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>wechat<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>weixin<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>导入必要的库文件，如下图所示：<br><img src="http://p0gxdxnc4.bkt.clouddn.com/2017-12-11-14-30-54.png" alt="2017-12-11-14-30-54"></li><li>在项目目录下创建Group <code>Wxapi</code>，并创建<code>WxpayModule</code>模块</li><li>下载开发工具包（<a href="https://res.wx.qq.com/op_res/qNjut2h9J8oE9o2zeJTAYdCTgB7hM5pHAkJz1rNNCOnSyKA2bwzBv3fQILqbD_c1">SDK</a>），导入<code>Wxapi</code>中，最终如下图所示：<br><img src="http://p0gxdxnc4.bkt.clouddn.com/2017-12-11-15-05-34.png" alt="2017-12-11-15-05-34"></li><li>编写<code>WxpayModule.h</code>代码如下：<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;React/RCTBridgeModule.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&lt;React/RCTLog.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;WXApiObject.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&quot;WXApi.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WxpayModule</span> : <span class="title">NSObject</span> &lt;<span class="title">RCTBridgeModule</span>, <span class="title">WXApiDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></li><li>编写<code>WxpayModule.m</code>代码如下：<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;WxpayModule.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WxpayModule</span></span></span><br><span class="line"></span><br><span class="line">RCTPromiseResolveBlock resolveBlock = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">self</span> = [<span class="variable language_">super</span> init];</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] addObserver:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(handleWXPay:) name:<span class="string">@&quot;WXPay&quot;</span> object:<span class="literal">nil</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)dealloc</span><br><span class="line">&#123;</span><br><span class="line">  [[<span class="built_in">NSNotificationCenter</span> defaultCenter] removeObserver:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)handleWXPay:(<span class="built_in">NSNotification</span> *)aNotification</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">NSString</span> * errCode =  [aNotification userInfo][<span class="string">@&quot;errCode&quot;</span>];</span><br><span class="line">  resolveBlock(@&#123;<span class="string">@&quot;errCode&quot;</span>: errCode&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RCT_EXPORT_METHOD(registerApp:(<span class="built_in">NSString</span> *)APP_ID)&#123;</span><br><span class="line">  [WXApi registerApp: APP_ID];<span class="comment">//向微信注册</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RCT_EXPORT_METHOD(pay:(<span class="built_in">NSDictionary</span> *)order</span><br><span class="line">                  resolver:(RCTPromiseResolveBlock)resolve</span><br><span class="line">                  rejecter:(RCTPromiseRejectBlock)reject)&#123;</span><br><span class="line">  resolveBlock = resolve;</span><br><span class="line">  <span class="comment">//调起微信支付</span></span><br><span class="line">  PayReq *req = [[PayReq alloc] init];</span><br><span class="line">  req.partnerId = [order objectForKey:<span class="string">@&quot;partnerid&quot;</span>];</span><br><span class="line">  req.prepayId = [order objectForKey:<span class="string">@&quot;prepayid&quot;</span>];</span><br><span class="line">  req.nonceStr = [order objectForKey:<span class="string">@&quot;noncestr&quot;</span>];</span><br><span class="line">  req.timeStamp = [[order objectForKey:<span class="string">@&quot;timestamp&quot;</span>] intValue];</span><br><span class="line">  req.package = [order objectForKey:<span class="string">@&quot;package&quot;</span>];</span><br><span class="line">  req.sign = [order objectForKey:<span class="string">@&quot;sign&quot;</span>];</span><br><span class="line">  [WXApi sendReq:req];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RCT_REMAP_METHOD(isSupported, <span class="comment">// 判断是否支持调用微信SDK</span></span><br><span class="line">                  resolver:(RCTPromiseResolveBlock)resolve</span><br><span class="line">                  rejecter:(RCTPromiseRejectBlock)reject)&#123;</span><br><span class="line">  <span class="keyword">if</span> (![WXApi isWXAppInstalled]) resolve(@NO);</span><br><span class="line">  <span class="keyword">else</span> resolve(@YES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RCT_EXPORT_MODULE(Wxpay);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></li><li>处理微信支付回调，在<code>AppDelegate.m</code>中添加如下代码：<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//支付回调9以后</span></span><br><span class="line">- (<span class="type">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)app openURL:(<span class="built_in">NSURL</span> *)url options:(<span class="built_in">NSDictionary</span>*)options &#123;</span><br><span class="line">  <span class="keyword">return</span>  [WXApi handleOpenURL:url delegate:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//支付回调9以前</span></span><br><span class="line">- (<span class="type">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application handleOpenURL:(<span class="built_in">NSURL</span> *)url &#123;</span><br><span class="line">  <span class="keyword">return</span>  [WXApi handleOpenURL:url delegate:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ios9以后的方法</span></span><br><span class="line">- (<span class="type">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application openURL:(<span class="built_in">NSURL</span> *)url sourceApplication:(<span class="built_in">NSString</span> *)sourceApplication annotation:(<span class="type">id</span>)annotation &#123;</span><br><span class="line">  <span class="keyword">return</span> [WXApi handleOpenURL:url delegate:<span class="keyword">self</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> mark - wx callback</span></span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>) onReq:(BaseReq*)req</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// TODO Something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="type">void</span>)onResp:(BaseResp *)resp</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//判断是否是微信支付回调 (注意是PayResp 而不是PayReq)</span></span><br><span class="line">  <span class="keyword">if</span> ([resp isKindOfClass:[PayResp <span class="keyword">class</span>]])</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//发出通知 从微信回调回来之后,发一个通知,让请求支付的页面接收消息,并且展示出来,或者进行一些自定义的展示或者跳转</span></span><br><span class="line">    <span class="built_in">NSNotification</span> * notification = [<span class="built_in">NSNotification</span> notificationWithName:<span class="string">@&quot;WXPay&quot;</span> object:<span class="literal">nil</span> userInfo:@&#123;<span class="string">@&quot;errCode&quot;</span>:@(resp.errCode)&#125;];</span><br><span class="line">    [[<span class="built_in">NSNotificationCenter</span> defaultCenter] postNotification:notification];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>至此，iOS端微信SDK集成成功</li></ol><h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React-Native"></a>React-Native</h3><ol><li>修改原生代码后，需要重新打包运行程序：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android # 运行Android端</span><br><span class="line">react-native run-ios # 运行iOS端</span><br></pre></td></tr></table></figure></li><li>编写<code>Wxpay.js</code>工具类<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NativeModules</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NativeModules</span>.<span class="property">Wxpay</span>;</span><br></pre></td></tr></table></figure></li><li>在入口文件<code>index.js</code>向微信注册应用<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Wxpay</span> <span class="keyword">from</span> <span class="string">&#x27;./your/path/to/Wxpay&#x27;</span>;</span><br><span class="line"><span class="title class_">Wxpay</span>.<span class="title function_">registerApp</span>(<span class="variable constant_">APPID</span>); <span class="comment">//向微信注册</span></span><br></pre></td></tr></table></figure></li><li>调用<code>Wxpay</code>模块发起微信支付：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Wxpay</span> <span class="keyword">from</span> <span class="string">&#x27;./your/path/to/Wxpay&#x27;</span>;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">pay</span>(<span class="params">params</span>)&#123; <span class="comment">// params 为后端提供的参数</span></span><br><span class="line">    <span class="keyword">let</span> isSupported = <span class="keyword">await</span> <span class="title function_">call</span>(<span class="title class_">Payway</span>.<span class="property">isSupported</span>);</span><br><span class="line">    <span class="keyword">if</span> (!isSupported) &#123; <span class="comment">// 判断是否支持微信支付</span></span><br><span class="line">        message.<span class="title function_">show</span>(<span class="string">&#x27;找不到微信应用，请安装最新版微信&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> <span class="title function_">call</span>(getOrderInfo, params); <span class="comment">// 从后端获取签名对象，参考支付接口调用</span></span><br><span class="line">    <span class="keyword">let</span> ret = <span class="keyword">await</span> <span class="title function_">call</span>(<span class="title class_">Wxpay</span>.<span class="property">pay</span>, res.<span class="property">data</span>); <span class="comment">// 调起微信客户端，发起支付</span></span><br><span class="line">    <span class="keyword">if</span> (ret.<span class="property">errCode</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 支付成功回调</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 支付失败回调</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure></li><li>支付接口调用参考<a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12">调起支付接口</a>和<a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1">统一下单</a>，本篇将不做赘述。</li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5">APP端开发步骤</a></li><li><a href="http://reactnative.cn/docs/0.50/native-modules-android.html">Android调用原生模块</a></li><li><a href="http://reactnative.cn/docs/0.50/native-modules-ios.html">iOS调用原生模块</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react-native 集成支付宝</title>
      <link href="/2017/12/05/react-native-%E9%9B%86%E6%88%90%E6%94%AF%E4%BB%98%E5%AE%9D/"/>
      <url>/2017/12/05/react-native-%E9%9B%86%E6%88%90%E6%94%AF%E4%BB%98%E5%AE%9D/</url>
      
        <content type="html"><![CDATA[<p>现在很多 APP 都有集成第三方支付平台的需求，用来支付自己的产品，但是官方一般都没有介绍如何集成到 react-native 的应用中，本篇文章将基于官方提供的集成文档，介绍如何将支付宝集成到 react-native 应用中。</p><h2 id="场景介绍"><a href="#场景介绍" class="headerlink" title="场景介绍"></a>场景介绍</h2><blockquote><p>适用于商家在App应用中集成支付宝支付功能。<br>商家APP调用支付宝提供的SDK，SDK再调用支付宝APP内的支付模块。如果用户已安装支付宝APP，商家APP会跳转到支付宝中完成支付，支付完后跳回到商家APP内，最后展示支付结果。如果用户没有安装支付宝APP，商家APP内会调起支付宝网页支付收银台，用户登录支付宝账户，支付完后展示支付结果。<br>目前支持手机系统有：iOS（苹果）、Android（安卓）。</p></blockquote><h2 id="集成SDK"><a href="#集成SDK" class="headerlink" title="集成SDK"></a>集成SDK</h2><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ol><li>将alipaySdk-xxxxxxxx.jar包放入<code>android/app/libs</code>目录下，如下图。<br><img src="https://gw.alipayobjects.com/zos/skylark/public/files/909cb3a6c0febb5ef77be00e8cbfcdfe.png" alt=""></li><li>将libs目录下的alipaySDK-xxxxxxxx.jar导入，在<code>android/app/build.gradle</code>里添加如下代码：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    ......</span><br><span class="line">    compile <span class="title function_">files</span>(<span class="string">&#x27;libs/alipaySdk-20170725.jar&#x27;</span>)</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在<code>android/app/src/AndroidManifest.xml</code>文件里面添加声明：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支付宝 activity 声明 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;com.alipay.sdk.app.H5PayActivity&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">&quot;orientation|keyboardHidden|navigation|screenSize&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;behind&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;adjustResize|stateHidden&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;com.alipay.sdk.app.H5AuthActivity&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">&quot;orientation|keyboardHidden|navigation&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">&quot;behind&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:windowSoftInputMode</span>=<span class="string">&quot;adjustResize|stateHidden&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 支付宝权限声明 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_WIFI_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_PHONE_STATE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li>在<code>android/app/proguard-rules.pro</code>添加混淆规则<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.android.app.IAlixPay&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.android.app.IAlixPay$Stub&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.android.app.IRemoteServiceCallback&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.android.app.IRemoteServiceCallback$Stub&#123;*;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.sdk.app.PayTask&#123; <span class="keyword">public</span> *;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.sdk.app.AuthTask&#123; <span class="keyword">public</span> *;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.sdk.app.H5PayCallback &#123;</span><br><span class="line">    &lt;fields&gt;;</span><br><span class="line">    &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.android.phone.mrpc.core.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.apmobilesecuritysdk.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.mobile.framework.service.annotation.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.mobilesecuritysdk.face.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.tscenter.biz.rpc.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">org</span>.json.alipay.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.alipay.tscenter.** &#123; *; &#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.ta.utdid2.** &#123; *;&#125;</span><br><span class="line">-keep <span class="keyword">class</span> <span class="title class_">com</span>.ut.device.** &#123; *;&#125;</span><br></pre></td></tr></table></figure></li><li>在<code>com.xx.xx</code>创建包名<code>alipay</code></li><li>编写 Module，在<code>com.xx.xx.alipay</code>包下创建<code>AlipayModule.java</code>，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xx.xx.alipay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alipay.sdk.app.PayTask;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Arguments;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.Promise;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactMethod;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.WritableMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayModule</span> <span class="keyword">extends</span> <span class="title class_">ReactContextBaseJavaModule</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">AlipayModule</span><span class="params">(ReactApplicationContext reactContext)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(reactContext);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Alipay&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@ReactMethod</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pay</span><span class="params">(<span class="keyword">final</span> String orderInfo, <span class="keyword">final</span> Promise promise)</span> &#123;</span><br><span class="line">    <span class="type">Runnable</span> <span class="variable">payRunnable</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WritableMap</span> <span class="variable">map</span> <span class="operator">=</span> Arguments.createMap();</span><br><span class="line">        <span class="type">PayTask</span> <span class="variable">alipay</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayTask</span>(getCurrentActivity());</span><br><span class="line">        Map&lt;String, String&gt; result = alipay.payV2(orderInfo,<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry: result.entrySet())</span><br><span class="line">          map.putString(entry.getKey(), entry.getValue());</span><br><span class="line">        promise.resolve(map);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 必须异步调用</span></span><br><span class="line">    <span class="type">Thread</span> <span class="variable">payThread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(payRunnable);</span><br><span class="line">    payThread.start();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>编写 Package，在<code>com.xx.xx.alipay</code>包下创建<code>AlipayPackage.java</code>，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xx.xx.alipay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.react.ReactPackage;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.NativeModule;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line"><span class="keyword">import</span> com.facebook.react.uimanager.ViewManager;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayPackage</span> <span class="keyword">implements</span> <span class="title class_">ReactPackage</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;ViewManager&gt; <span class="title function_">createViewManagers</span><span class="params">(ReactApplicationContext reactContext)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> List&lt;NativeModule&gt; <span class="title function_">createNativeModules</span><span class="params">(</span></span><br><span class="line"><span class="params">          ReactApplicationContext reactContext)</span> &#123;</span><br><span class="line">    List&lt;NativeModule&gt; modules = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    modules.add(<span class="keyword">new</span> <span class="title class_">AlipayModule</span>(reactContext));</span><br><span class="line">    <span class="keyword">return</span> modules;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>最后在 Android 这边要做的最后一件事就是注册这个模块，在<code>com.xx.xx.MainApplication</code>中注册模块：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> List&lt;ReactPackage&gt; <span class="title function_">getPackages</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">MainReactPackage</span>(),</span><br><span class="line">        <span class="comment">// ...other packages</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">AlipayPackage</span>() <span class="comment">// &lt;-- 注册模块</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><ol><li>启动IDE（如Xcode），把<a href="https://docs.open.alipay.com/54/104509">iOS包</a>中的压缩文件中以下文件拷贝到项目文件夹下，并导入到项目工程中。<br>AlipaySDK.bundle<br>AlipaySDK.framework</li><li>在Build Phases选项卡的Link Binary With Libraries中，增加以下依赖：<br><img src="https://gw.alipayobjects.com/os/skylark/public/files/3ebefcabdf8062f717dbb5d866ba7cfb" alt=""><ul><li>如果是Xcode 7.0之后的版本，需要添加libc++.tbd、libz.tbd；</li><li>如果是Xcode 7.0之前的版本，需要添加libc++.dylib、libz.dylib。</li></ul></li><li>在项目目录下创建Group <code>Alipay</code>，并创建<code>AlipayModule</code>模块，如下图所示：<br><img src="http://p0gxdxnc4.bkt.clouddn.com/2017-12-05-16-24-34.png" alt="2017-12-05-16-24-34"></li><li><p>编写<code>AlipayModule.h</code>代码如下：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&lt;React/RCTBridgeModule.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&lt;React/RCTLog.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AlipayModule</span> : <span class="title">NSObject</span> &lt;<span class="title">RCTBridgeModule</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></li><li><p>编写<code>AlipayModule.m</code>代码如下：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="string">&quot;AlipayModule.h&quot;</span></span></span><br><span class="line"><span class="meta">#import <span class="string">&lt;AlipaySDK/AlipaySDK.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AlipayModule</span></span></span><br><span class="line"></span><br><span class="line">RCT_EXPORT_METHOD(pay:(<span class="built_in">NSString</span> *)orderInfo</span><br><span class="line">  resolver:(RCTPromiseResolveBlock)resolve</span><br><span class="line">  rejecter:(RCTPromiseRejectBlock)reject)&#123;</span><br><span class="line">  <span class="comment">//应用注册scheme,在AliSDKDemo-Info.plist定义URL types</span></span><br><span class="line">  <span class="built_in">NSString</span> *appScheme = <span class="string">@&quot;alisdkdemo&quot;</span>;</span><br><span class="line">  [[AlipaySDK defaultService] payOrder:orderInfo fromScheme:appScheme callback:^(<span class="built_in">NSDictionary</span> *resultDic) &#123;</span><br><span class="line">    resolve(resultDic);</span><br><span class="line">  &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RCT_EXPORT_MODULE(Alipay);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></li><li>至此，iOS端支付宝SDK集成成功</li></ol><h3 id="React-Native"><a href="#React-Native" class="headerlink" title="React-Native"></a>React-Native</h3><ol><li>修改原生代码后，需要重新打包运行程序：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android # 运行Android端</span><br><span class="line">react-native run-ios # 运行iOS端</span><br></pre></td></tr></table></figure></li><li>编写<code>Alipay.js</code>工具类<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NativeModules</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NativeModules</span>.<span class="property">Alipay</span>;</span><br></pre></td></tr></table></figure></li><li>调用<code>Alipay</code>模块发起支付宝支付：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Alipay</span> <span class="keyword">from</span> <span class="string">&#x27;./your/path/to/Alipay&#x27;</span>;</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">pay</span>(<span class="params">params</span>)&#123; <span class="comment">// params 为后端提供的参数</span></span><br><span class="line">  <span class="keyword">let</span> res = <span class="keyword">await</span> <span class="title function_">call</span>(getOrderInfo, params); <span class="comment">// 从后端获取签名字串，参考支付接口调用</span></span><br><span class="line">  <span class="keyword">let</span> ret = <span class="keyword">await</span> <span class="title function_">call</span>(<span class="title class_">Alipay</span>.<span class="property">pay</span>, res.<span class="property">data</span>); <span class="comment">// 调起支付宝，发起支付</span></span><br><span class="line">  <span class="keyword">if</span> (ret.<span class="property">resultStatus</span> === <span class="string">&#x27;9000&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 支付成功回调</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 支付失败回调</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>支付接口调用参考<a href="https://docs.open.alipay.com/204/105296/#s3">支付接口调用</a>和<a href="https://docs.open.alipay.com/204/105465/">支付请求参数说明</a>，本篇将不做赘述。</li></ol><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>后面会继续介绍 <a href="http://fangzf.me/2017/12/11/react-native-%E9%9B%86%E6%88%90%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/">react-native 微信支付的集成</a>，相比支付宝集成，微信支付集成会麻烦很多，比如处理回调、应用签名机制、注册scheme等都提高了集成的复杂度。</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://docs.open.alipay.com/204/105296/">App支付Android集成流程</a></li><li><a href="https://docs.open.alipay.com/204/105295/">App支付iOS集成流程</a></li><li><a href="http://reactnative.cn/docs/0.50/native-modules-android.html">Android调用原生模块</a></li><li><a href="http://reactnative.cn/docs/0.50/native-modules-ios.html">iOS调用原生模块</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行命令创建和删除 git 分支</title>
      <link href="/2017/12/04/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4-git-%E5%88%86%E6%94%AF/"/>
      <url>/2017/12/04/%E4%B8%80%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%A0%E9%99%A4-git-%E5%88%86%E6%94%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push origin master:v1.2.61<span class="comment">#创建分支</span></span><br><span class="line">git push origin --delete v1.2.61<span class="comment">#删除分支 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React Native Modal 点击遮罩层关闭</title>
      <link href="/2017/12/01/React-Native-Modal-%E7%82%B9%E5%87%BB%E9%81%AE%E7%BD%A9%E5%B1%82%E5%85%B3%E9%97%AD/"/>
      <url>/2017/12/01/React-Native-Modal-%E7%82%B9%E5%87%BB%E9%81%AE%E7%BD%A9%E5%B1%82%E5%85%B3%E9%97%AD/</url>
      
        <content type="html"><![CDATA[<p>在开发 ReactNative 程序的时候，经常有这样的需求，弹出一个弹窗窗口，用户需要点击返回键或者点击遮罩层关闭弹窗，以下代码兼容 Android 和 iOS 平台<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;width, height&#125; = <span class="title class_">Dimensions</span>.<span class="title function_">get</span>(<span class="string">&#x27;window&#x27;</span>);</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">Modal</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">animationType</span>=<span class="string">&#123;</span>&quot;<span class="attr">slide</span>&quot;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">transparent</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">visible</span>=<span class="string">&#123;this.state.modalVisible&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">onRequestClose</span>=<span class="string">&#123;()</span> =&gt;</span> this.setState(&#123;modalVisible:false&#125;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;width,height,position:</span>&#x27;<span class="attr">relative</span>&#x27;&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">TouchableWithoutFeedback</span> <span class="attr">onPress</span>=<span class="string">&#123;()</span>=&gt;</span>this.setState(&#123;modalVisible:false&#125;)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">View</span>  <span class="attr">style</span>=<span class="string">&#123;&#123;position:</span>&#x27;<span class="attr">absolute</span>&#x27;,<span class="attr">width</span>,<span class="attr">height</span>,<span class="attr">top:0</span>,<span class="attr">left:0</span>,<span class="attr">backgroundColor:</span>&#x27;<span class="attr">rgba</span>(<span class="attr">0</span>,<span class="attr">0</span>,<span class="attr">0</span>,<span class="attr">.5</span>)&#x27;&#125;&#125;/&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">TouchableWithoutFeedback</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;/*...your code*/&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">Modal</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决黑苹果活动监视器意外退出问题</title>
      <link href="/2017/11/30/%E8%A7%A3%E5%86%B3%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%B4%BB%E5%8A%A8%E7%9B%91%E8%A7%86%E5%99%A8%E6%84%8F%E5%A4%96%E9%80%80%E5%87%BA%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/30/%E8%A7%A3%E5%86%B3%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%B4%BB%E5%8A%A8%E7%9B%91%E8%A7%86%E5%99%A8%E6%84%8F%E5%A4%96%E9%80%80%E5%87%BA%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>电池驱动问题，只需删除活动监视器的 plist 即可，删除掉就可以重新打开，但别再去点【能耗】那一项。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm ~/Library/Preferences/com.apple.ActivityMonitor.plist</span><br></pre></td></tr></table></figure><br>删掉就行了</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>node 调用命令行程序</title>
      <link href="/2017/11/27/node-%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
      <url>/2017/11/27/node-%E8%B0%83%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>每种语言都有自己的优势，互相结合起来各取所长程序执行起来效率更高或者说哪种实现方式较简单就用哪个，nodejs是利用子进程来调用系统命令或者文件，文档见 <a href="http://nodejs.org/api/child_process.html">http://nodejs.org/api/child_process.html</a> ，NodeJS子进程提供了与系统交互的重要接口，其主要API有： 标准输入、标准输出及标准错误输出的接口。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>).<span class="title function_">exec</span>(<span class="string">&#x27;adb reverse tcp:&#x27;</span>+<span class="variable constant_">PORT</span>+<span class="string">&#x27; tcp:&#x27;</span>+<span class="variable constant_">PORT</span>,</span><br><span class="line">  <span class="keyword">function</span> (<span class="params">error, stdout, stderr</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (error === <span class="literal">null</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;adb reverse success&#x27;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;error: &#x27;</span>+error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用脚本来改变某个repo的Git历史</title>
      <link href="/2017/11/20/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%9D%A5%E6%94%B9%E5%8F%98%E6%9F%90%E4%B8%AArepo%E7%9A%84Git%E5%8E%86%E5%8F%B2/"/>
      <url>/2017/11/20/%E4%BD%BF%E7%94%A8%E8%84%9A%E6%9C%AC%E6%9D%A5%E6%94%B9%E5%8F%98%E6%9F%90%E4%B8%AArepo%E7%9A%84Git%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>我们已经创建了一个脚本，使用正确的姓名和电子邮件地址提交后，你以前提交的所有的commits中的作者信息及提交者字段中的旧的用户名和邮箱地址都将被更正。</p><blockquote><p>注意： 执行这段脚本会重写 repo 所有协作者的历史。完成以下操作后，任何 fork 或 clone 的人必须获取重写后的历史并把所有本地修改 rebase 入重写后的历史中。</p></blockquote><p>在执行这段脚本前，你需要准备的信息：</p><ol><li>Mac、Linux下打开Terminal，Windows下打开命令提示符（command prompt）</li><li>给你的repo创建一个全新的clone<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --bare https://github.com/user/repo.git</span><br><span class="line"><span class="built_in">cd</span> repo.git</span><br></pre></td></tr></table></figure></li><li>复制粘贴脚本，并根据你的信息修改以下变量：旧的Email地址，正确的用户名，正确的邮件地址<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git filter-branch --env-filter <span class="string">&#x27;</span></span><br><span class="line"><span class="string">OLD_EMAIL=&quot;旧的Email地址&quot;</span></span><br><span class="line"><span class="string">CORRECT_NAME=&quot;正确的用户名&quot;</span></span><br><span class="line"><span class="string">CORRECT_EMAIL=&quot;正确的邮件地址&quot;</span></span><br><span class="line"><span class="string">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span></span><br><span class="line"><span class="string">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span></span><br><span class="line"><span class="string">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">&#x27;</span> --tag-name-filter <span class="built_in">cat</span> -- --branches --tags</span><br></pre></td></tr></table></figure></li><li>执行以上脚本</li><li>用git log命令看看新 Git 历史有没有错误</li><li>把正确历史 push 到 Github<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force --tags origin <span class="string">&#x27;refs/heads/*&#x27;</span></span><br></pre></td></tr></table></figure></li><li>删掉刚刚临时创建的 clone<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">rm</span> -rf repo.git</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用node-http-proxy代理调试接口</title>
      <link href="/2017/11/15/%E4%BD%BF%E7%94%A8node-http-proxy%E4%BB%A3%E7%90%86%E8%B0%83%E8%AF%95%E6%8E%A5%E5%8F%A3/"/>
      <url>/2017/11/15/%E4%BD%BF%E7%94%A8node-http-proxy%E4%BB%A3%E7%90%86%E8%B0%83%E8%AF%95%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>前端开发中，经常会遇到跨域请求访问不到接口的问题，为了解决这个问题，我们可以让后端配置跨域。<br>或者前端配置代理，让我们自由访问接口。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> httpProxy = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> host = <span class="string">&#x27;https://your.target.host&#x27;</span>; <span class="comment">// 代理主机</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">9888</span>; <span class="comment">// 本地端口</span></span><br><span class="line"><span class="keyword">var</span> proxy = httpProxy.<span class="title function_">createProxyServer</span>(&#123;</span><br><span class="line">  <span class="attr">target</span>: host,</span><br><span class="line">  <span class="attr">changeOrigin</span>: <span class="literal">true</span>, <span class="comment">// 改变来源为当前主机</span></span><br><span class="line">  <span class="attr">secure</span>: <span class="literal">false</span> <span class="comment">// 信任不安全的证书</span></span><br><span class="line">&#125;);</span><br><span class="line">proxy.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, req, res</span>) &#123; <span class="comment">// 自定义代理报错信息</span></span><br><span class="line">  res.<span class="title function_">writeHead</span>(<span class="number">500</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;Something went wrong. And we are reporting a custom error message.&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">proxy.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Proxy service is listening on port &quot;</span>+<span class="variable constant_">PORT</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Chrome 调试 ReactNative 接口</title>
      <link href="/2017/07/13/%E4%BD%BF%E7%94%A8-Chrome-%E8%B0%83%E8%AF%95-ReactNative-%E6%8E%A5%E5%8F%A3/"/>
      <url>/2017/07/13/%E4%BD%BF%E7%94%A8-Chrome-%E8%B0%83%E8%AF%95-ReactNative-%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>在入口文件中，将 Ajax 赋值到 GLOBAL 中：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> _XHR = <span class="variable constant_">GLOBAL</span>.<span class="property">originalXMLHttpRequest</span> ?  </span><br><span class="line">    <span class="variable constant_">GLOBAL</span>.<span class="property">originalXMLHttpRequest</span> :           </span><br><span class="line">    <span class="variable constant_">GLOBAL</span>.<span class="property">XMLHttpRequest</span>                     </span><br><span class="line"></span><br><span class="line"><span class="title class_">XMLHttpRequest</span> = _XHR</span><br></pre></td></tr></table></figure></p><p>优化版：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">GLOBAL</span>.<span class="property">XMLHttpRequest</span> = <span class="variable constant_">GLOBAL</span>.<span class="property">originalXMLHttpRequest</span> || <span class="variable constant_">GLOBAL</span>.<span class="property">XMLHttpRequest</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx解决跨域请求</title>
      <link href="/2017/07/05/Nginx%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
      <url>/2017/07/05/Nginx%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>在服务器端的nginx.conf中配置增加配置<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">  ......</span><br><span class="line">  <span class="attribute">add_header</span> Access-Control-Allow-Origin *;</span><br><span class="line">  <span class="attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;</span><br><span class="line">  <span class="attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">  ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像导入导出</title>
      <link href="/2017/06/28/Docker%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>/2017/06/28/Docker%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="导出容器docker-export"><a href="#导出容器docker-export" class="headerlink" title="导出容器docker export"></a>导出容器docker export</h3><p>导出容器快照到本地文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                    PORTS               NAMES</span><br><span class="line">7691a814370e        ubuntu:14.04        <span class="string">&quot;/bin/bash&quot;</span>         36 hours ago        Exited (0) 21 hours ago                       <span class="built_in">test</span></span><br><span class="line">$ sudo docker <span class="built_in">export</span> 7691a814370e &gt; ubuntu.tar</span><br></pre></td></tr></table></figure></p><h3 id="导入容器快照docker-import"><a href="#导入容器快照docker-import" class="headerlink" title="导入容器快照docker import"></a>导入容器快照docker import</h3><p>从容器快照文件中再导入为镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> ubuntu.tar | sudo docker import - <span class="built_in">test</span>/ubuntu:v1.0</span><br><span class="line">$ sudo docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE</span><br><span class="line"><span class="built_in">test</span>/ubuntu         v1.0                9d37a6082e97        About a minute ago   171.3 MB</span><br></pre></td></tr></table></figure></p><h3 id="通过指定-URL-或者某个目录来导入"><a href="#通过指定-URL-或者某个目录来导入" class="headerlink" title="通过指定 URL 或者某个目录来导入"></a>通过指定 URL 或者某个目录来导入</h3><p>导入远程的包:This will create a new untagged image.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker import http://example.com/exampleimage.tgz</span><br></pre></td></tr></table></figure><br>导入本地文件:Import to docker via pipe and STDIN.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> exampleimage.tgz | sudo docker import- exampleimagelocal:new</span><br></pre></td></tr></table></figure><br>导入本地目录:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -c <span class="built_in">dir</span>/| sudo docker import - docker-image-name</span><br></pre></td></tr></table></figure></p><p>PS: 用户既可以使用 docker load 来导入镜像存储文件到本地镜像库，也可以使用 docker import 来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用前端校验工具类</title>
      <link href="/2017/06/24/%E5%B8%B8%E7%94%A8%E5%89%8D%E7%AB%AF%E6%A0%A1%E9%AA%8C%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2017/06/24/%E5%B8%B8%E7%94%A8%E5%89%8D%E7%AB%AF%E6%A0%A1%E9%AA%8C%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前端验证，是为了区别后端验证而这样说的，主要是用 js 来验证数据的合法性，来增强用户体验的，比如，鼠标移上去会有提示效果，鼠标离开，就会马上告诉你数据是否合法等等。<br>数据验证其实就是数据的合法性校验，例如：用户添加的邮件地址是不是正确啊，是不是太长了等等。</p></blockquote><p><a href="https://cdn.rawgit.com/ZevenFang/assets/96cdbd3e/fangzf.me/files/Validator.js" download="Validator.js"><i>Validator.js</i></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Validator</span> = &#123;</span><br><span class="line"><span class="title class_">Require</span> : <span class="regexp">/.+/</span>,</span><br><span class="line"><span class="title class_">Email</span> : <span class="regexp">/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/</span>,</span><br><span class="line"><span class="title class_">Phone</span> : <span class="regexp">/^((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?(\(0\d&#123;2,3&#125;\)|0\d&#123;2,3&#125;-)?[1-9]\d&#123;6,7&#125;(\-\d&#123;1,4&#125;)?$/</span>,</span><br><span class="line"><span class="title class_">Mobile</span> : <span class="regexp">/^(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?13\d&#123;9&#125;)|(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?15\d&#123;9&#125;)|(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?18\d&#123;9&#125;)$/</span>,</span><br><span class="line"><span class="title class_">PhoneM</span> : <span class="regexp">/^(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?(\(0\d&#123;2,3&#125;\)|0\d&#123;2,3&#125;-)?[1-9]\d&#123;6,7&#125;(\-\d&#123;1,4&#125;)?)|((((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?13\d&#123;9&#125;)|(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?15\d&#123;9&#125;))|(((\(\d&#123;2,3&#125;\))|(\d&#123;3&#125;\-))?18\d&#123;9&#125;)$/</span>,</span><br><span class="line"><span class="title class_">Url</span> : <span class="regexp">/^http:\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&amp;_~`@[\]\&#x27;:+!]*([^&lt;&gt;\&quot;\&quot;])*$/</span>,</span><br><span class="line"><span class="title class_">Html</span>: <span class="regexp">/^&lt;(.*)&gt;.*&lt;\/\1&gt;|&lt;(.*)[\/]?&gt;/</span>,</span><br><span class="line"><span class="title class_">IdCard</span> : <span class="string">&quot;this.IsIdCard(value)&quot;</span>,</span><br><span class="line"><span class="title class_">DaoyouZH</span>:<span class="regexp">/^[D|d]&#123;0,1&#125;[-]?(\d)&#123;1,5&#125;([-]?(\d)&#123;1,7&#125;)$/g</span>,</span><br><span class="line"><span class="title class_">Orid</span>: <span class="string">&quot;this.IsOrid(value)&quot;</span>,</span><br><span class="line"><span class="title class_">Zfid</span>: <span class="string">&quot;this.IsZfid(value)&quot;</span>,</span><br><span class="line"><span class="title class_">Currency</span> : <span class="regexp">/^\d+(\.\d+)?$/</span>,</span><br><span class="line"><span class="title class_">Amount</span> : <span class="regexp">/^\d+(\.\d&#123;1,2&#125;)?$/</span>,</span><br><span class="line"><span class="title class_">Number</span> : <span class="regexp">/^\d+$/</span>,</span><br><span class="line"><span class="title class_">NumberM</span> : <span class="regexp">/^[0-9]*[1-9][0-9]*$/</span>,</span><br><span class="line"><span class="title class_">Shengao</span> : <span class="regexp">/^[1-2]&#123;1&#125;[0-9]&#123;2&#125;$/</span>,</span><br><span class="line"><span class="title class_">Code</span> : <span class="regexp">/^[0-9]\w&#123;3&#125;$/</span>,</span><br><span class="line"><span class="title class_">Zip</span> : <span class="regexp">/^[0-9]\d&#123;5&#125;$/</span>,</span><br><span class="line"><span class="variable constant_">QQ</span> : <span class="regexp">/^[1-9]\d&#123;4,12&#125;$/</span>,</span><br><span class="line"><span class="title class_">Integer</span> : <span class="regexp">/^[-\+]?\d+$/</span>,</span><br><span class="line"><span class="title class_">Double</span> : <span class="regexp">/^[-\+]?\d+(\.\d+)?$/</span>,</span><br><span class="line"><span class="title class_">English</span> : <span class="regexp">/^[A-Za-z]+$/</span>,</span><br><span class="line"><span class="title class_">EnglishNumber</span> : <span class="regexp">/^[A-Za-z0-9]+$/</span>,</span><br><span class="line"><span class="title class_">Chinese</span> :  <span class="regexp">/^[\u0391-\uFFE5]+$/</span>,</span><br><span class="line"><span class="title class_">Lname</span>:<span class="regexp">/^(([\u0391-\uFFE5]+)|([A-Za-z]+\s*[A-Za-z]+))$/</span>,</span><br><span class="line"><span class="title class_">Username</span> : <span class="regexp">/^([A-Za-z]&#123;1&#125;?[A-Za-z0-9_]+)$/i</span>,</span><br><span class="line"><span class="title class_">Password</span> : <span class="regexp">/^[A-Za-z0-9]\w&#123;7,14&#125;$/i</span>,</span><br><span class="line"><span class="title class_">PasswordSys</span> : <span class="regexp">/^[A-Za-z0-9]\w&#123;5,14&#125;$/i</span>,</span><br><span class="line"><span class="title class_">UnSafe</span> : <span class="regexp">/^(([A-Za-z0-9]*|\d*|[-_\~!@#\$%\^&amp;\*\.\(\)\[\]\&#123;\&#125;&lt;&gt;\?\\\/\&#x27;\&quot;]*)|.&#123;0,5&#125;)$|\s/</span>,</span><br><span class="line"><span class="title class_">IsSafe</span> : <span class="keyword">function</span>(<span class="params">str</span>)&#123;<span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">UnSafe</span>.<span class="title function_">test</span>(str);&#125;,</span><br><span class="line"><span class="title class_">SafeString</span> : <span class="string">&quot;this.IsSafe(value)&quot;</span>,</span><br><span class="line"><span class="title class_">Filter</span> : <span class="string">&quot;this.DoFilter(value, getAttribute(&#x27;accept&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Limit</span> : <span class="string">&quot;this.limit(value.length,getAttribute(&#x27;min&#x27;),  getAttribute(&#x27;max&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">LimitB</span> : <span class="string">&quot;this.limit(this.LenB(value), getAttribute(&#x27;min&#x27;), getAttribute(&#x27;max&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Date</span> : <span class="string">&quot;this.IsDate(value, getAttribute(&#x27;min&#x27;), getAttribute(&#x27;format&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Repeat</span> : <span class="string">&quot;value == document.getElementsByName(getAttribute(&#x27;to&#x27;))[0].value&quot;</span>,</span><br><span class="line"><span class="title class_">Range</span> : <span class="string">&quot;getAttribute(&#x27;min&#x27;) &lt; (value|0) &amp;&amp; (value|0) &lt; getAttribute(&#x27;max&#x27;)&quot;</span>,</span><br><span class="line"><span class="title class_">Compare</span> : <span class="string">&quot;this.compare(value,getAttribute(&#x27;operator&#x27;),getAttribute(&#x27;to&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Between</span> : <span class="string">&quot;this.between(value,getAttribute(&#x27;operator&#x27;),getAttribute(&#x27;min&#x27;),  getAttribute(&#x27;max&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Custom</span> : <span class="string">&quot;this.Exec(value, getAttribute(&#x27;regexp&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">Group</span> : <span class="string">&quot;this.MustChecked(getAttribute(&#x27;name&#x27;), getAttribute(&#x27;min&#x27;), getAttribute(&#x27;max&#x27;))&quot;</span>,</span><br><span class="line"><span class="title class_">ErrorItem</span> : [<span class="variable language_">document</span>.<span class="property">forms</span>[<span class="number">0</span>]],</span><br><span class="line"><span class="title class_">ErrorMessage</span> : [errTitle+<span class="string">&quot;\n \t\t\t\t&quot;</span>],</span><br><span class="line"><span class="title class_">Validate</span> : <span class="keyword">function</span>(<span class="params">theForm, mode,anoId</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> obj = theForm || event.<span class="property">srcElement</span>;</span><br><span class="line"><span class="keyword">var</span> mode = mode || <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> count = obj.<span class="property">elements</span>.<span class="property">length</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="property">length</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorItem</span>.<span class="property">length</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="number">0</span>] = obj;</span><br><span class="line"><span class="comment">//usname*?!guest|admin|ectrip|manager|bbs|trip|blog|ticket|hotel|destination|shop|business|travel|line|jingqu|help|my|pay|oa</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line"><span class="title function_">with</span>(<span class="params">obj.elements[i]</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> _dataType = <span class="title function_">getAttribute</span>(<span class="string">&quot;dataType&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">typeof</span>(_dataType) == <span class="string">&quot;object&quot;</span> || <span class="title function_">typeof</span>(<span class="variable language_">this</span>[_dataType]) == <span class="string">&quot;undefined&quot;</span>)  <span class="keyword">continue</span>;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title class_">ClearState</span>(obj.<span class="property">elements</span>[i]);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">getAttribute</span>(<span class="string">&quot;require&quot;</span>) == <span class="string">&quot;false&quot;</span> &amp;&amp; value == <span class="string">&quot;&quot;</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">switch</span>(_dataType)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;IdCard&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Orid&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Date&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Repeat&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Range&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Compare&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Between&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Custom&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Group&quot;</span> : </span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Limit&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;LimitB&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;SafeString&quot;</span> :</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;Filter&quot;</span> :</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">eval</span>(<span class="variable language_">this</span>[_dataType]))&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title class_">AddError</span>(i, <span class="title function_">getAttribute</span>(<span class="string">&quot;msg&quot;</span>),mode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span> :</span><br><span class="line"><span class="keyword">if</span>((!<span class="variable language_">this</span>[_dataType].<span class="title function_">test</span>(value))||(_dataType==<span class="string">&quot;Require&quot;</span>&amp;&amp;value==<span class="string">&quot;00&quot;</span>))&#123;</span><br><span class="line"><span class="comment">//value==&quot;00&quot; 为了省份判断</span></span><br><span class="line"><span class="keyword">if</span> ((_dataType==<span class="string">&quot;DaoyouZH&quot;</span>)&amp;&amp;(<span class="variable language_">this</span>[_dataType].<span class="title function_">test</span>(value).<span class="title function_">toString</span>()==<span class="string">&quot;false&quot;</span>))&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title class_">AddError</span>(i, <span class="title function_">getAttribute</span>(<span class="string">&quot;msg&quot;</span>),mode);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (_dataType!=<span class="string">&quot;DaoyouZH&quot;</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title class_">AddError</span>(i, <span class="title function_">getAttribute</span>(<span class="string">&quot;msg&quot;</span>),mode);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="property">length</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> errCount = <span class="variable language_">this</span>.<span class="property">ErrorItem</span>.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(mode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;errCount;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItem=<span class="title function_">jQuery</span>(<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[i]);</span><br><span class="line"><span class="keyword">var</span> textareaYes=<span class="string">&quot;span&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;text&quot;</span>||thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;password&quot;</span>||thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;TEXTAREA&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">removeClass</span>(<span class="string">&quot;input_ok&quot;</span>);</span><br><span class="line">thisErrorItem.<span class="title function_">addClass</span>(<span class="string">&quot;input_err&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;TEXTAREA&quot;</span>) textareaYes=<span class="string">&quot;div&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItemN=thisErrorItem.<span class="title function_">next</span>();</span><br><span class="line"><span class="keyword">var</span> thisErrorText=<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>[i].<span class="title function_">replace</span>(<span class="regexp">/\d+:/</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">after</span>(<span class="string">&quot;&lt;&quot;</span>+textareaYes+<span class="string">&quot; class=&#x27;red __ErrorMessagePanel input_err_info&#x27;&gt;&quot;</span>+thisErrorText+<span class="string">&quot;&lt;/&quot;</span>+textareaYes+<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="title function_">text</span>()!=<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">siblings</span>(<span class="string">&quot;:last&quot;</span>).<span class="title function_">after</span>(<span class="string">&quot;&lt;&quot;</span>+textareaYes+<span class="string">&quot; class=&#x27;red __ErrorMessagePanel input_err_info&#x27;&gt;&quot;</span>+thisErrorText+<span class="string">&quot;&lt;/&quot;</span>+textareaYes+<span class="string">&quot;&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">thisErrorItemN.<span class="title function_">addClass</span>(<span class="string">&quot;red __ErrorMessagePanel input_err_info&quot;</span>);</span><br><span class="line">thisErrorItemN.<span class="title function_">attr</span>(<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;false&quot;</span>);</span><br><span class="line">thisErrorItemN.<span class="title function_">html</span>(thisErrorText);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(e)&#123;<span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>));&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="number">1</span>].<span class="title function_">focus</span>();&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line"><span class="keyword">var</span> errid = <span class="title function_">jQuery</span>(<span class="string">&quot;#main_errors&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> anoId != <span class="string">&quot;undefined&quot;</span> )&#123;</span><br><span class="line"><span class="keyword">if</span> ( anoId!= <span class="string">&quot;&quot;</span> )</span><br><span class="line">errid=<span class="title function_">jQuery</span>(<span class="string">&quot;#&quot;</span>+anoId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> errinfoArr=<span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;errCount;i++)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItem=<span class="title function_">jQuery</span>(<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[i]);</span><br><span class="line"><span class="keyword">if</span>(thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;text&quot;</span>||thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;password&quot;</span>||thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;TEXTAREA&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">removeClass</span>(<span class="string">&quot;input_ok&quot;</span>);</span><br><span class="line">thisErrorItem.<span class="title function_">addClass</span>(<span class="string">&quot;input_err&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;SELECT&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItemN=thisErrorItem.<span class="title function_">next</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">after</span>(<span class="string">&quot;&lt;span class=&#x27;red __ErrorMessagePanel&#x27;&gt;*&lt;/span&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="title function_">text</span>()!=<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">siblings</span>(<span class="string">&quot;:last&quot;</span>).<span class="title function_">after</span>(<span class="string">&quot;&lt;span class=&#x27;red __ErrorMessagePanel&#x27;&gt;*&lt;/span&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">thisErrorItemN.<span class="title function_">addClass</span>(<span class="string">&quot;red __ErrorMessagePanel&quot;</span>);</span><br><span class="line">thisErrorItemN.<span class="title function_">attr</span>(<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;false&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">errinfoArr.<span class="title function_">push</span>(<span class="string">&quot;&lt;li&gt;&quot;</span>+<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>[i].<span class="title function_">replace</span>(<span class="regexp">/\d+:/</span>,<span class="string">&quot;&quot;</span>)+<span class="string">&quot;&lt;/li&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(e)&#123;</span><br><span class="line">errinfoArr.<span class="title function_">push</span>(<span class="string">&quot;&lt;li&gt;&quot;</span>+<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>[i].<span class="title function_">replace</span>(<span class="regexp">/\d+:/</span>,<span class="string">&quot;&quot;</span>)+<span class="string">&quot;&lt;/li&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_">jQuery</span>(<span class="string">&quot;.main_errors[id!=&#x27;&quot;</span>+errid.<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>)+<span class="string">&quot;&#x27;]&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line"><span class="keyword">if</span> (errid.<span class="title function_">css</span>(<span class="string">&quot;display&quot;</span>)!=<span class="string">&quot;block&quot;</span>) errid.<span class="title function_">fadeIn</span>();</span><br><span class="line"><span class="comment">//errid.slideDown(&quot;fast&quot;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> anoId != <span class="string">&quot;undefined&quot;</span> )&#123;</span><br><span class="line"><span class="keyword">if</span> ( anoId!= <span class="string">&quot;&quot;</span> )</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="string">&quot;#main_errors&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">&#125;</span><br><span class="line">errid.<span class="title function_">html</span>(<span class="string">&quot;&lt;div class=\&quot;main_errors_title\&quot;&gt;&quot;</span>+errTitle+<span class="string">&quot;&lt;/div&gt;&lt;ul&gt;&lt;li style=\&quot;height:1px; display:none; list-style:none;overflow:hidden; border:0px; padding:0px; margin:0px; margin-top:-2px;\&quot;&gt;&lt;/li&gt;&quot;</span>+errinfoArr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">toString</span>()+<span class="string">&quot;&lt;/ul&gt;&quot;</span>);</span><br><span class="line">top.<span class="property">window</span>.<span class="property">location</span>=<span class="string">&quot;#main_errors&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(e)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>));</span><br><span class="line">&#125;<span class="comment">//创建错误，弹出显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="number">1</span>].<span class="title function_">focus</span>();&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span> :</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;errCount;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItem=<span class="title function_">jQuery</span>(<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[i]);</span><br><span class="line"><span class="keyword">if</span>(thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;text&quot;</span>||thisErrorItem.<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;password&quot;</span>||thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;TEXTAREA&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">removeClass</span>(<span class="string">&quot;input_ok&quot;</span>);</span><br><span class="line">thisErrorItem.<span class="title function_">addClass</span>(<span class="string">&quot;input_err&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(thisErrorItem[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;SELECT&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> thisErrorItemN=thisErrorItem.<span class="title function_">next</span>();</span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">after</span>(<span class="string">&quot;&lt;span class=&#x27;red __ErrorMessagePanel&#x27;&gt;*&lt;/span&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(thisErrorItemN.<span class="title function_">text</span>()!=<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">thisErrorItem.<span class="title function_">siblings</span>(<span class="string">&quot;:last&quot;</span>).<span class="title function_">after</span>(<span class="string">&quot;&lt;span class=&#x27;red __ErrorMessagePanel&#x27;&gt;*&lt;/span&gt;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">thisErrorItemN.<span class="title function_">addClass</span>(<span class="string">&quot;red __ErrorMessagePanel&quot;</span>);</span><br><span class="line">thisErrorItemN.<span class="title function_">attr</span>(<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;false&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> systemUI!= <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line"><span class="keyword">var</span> errStrArr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">errStrArr = <span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line"><span class="title function_">errorMsg</span>(errStrArr, <span class="number">0</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">_this.<span class="property">ErrorItem</span>[<span class="number">1</span>].<span class="title function_">select</span>();</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="title function_">join</span>(<span class="string">&quot;\n&quot;</span>));</span><br><span class="line"><span class="keyword">try</span>&#123;<span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="number">1</span>].<span class="title function_">select</span>();  &#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="comment">//正确直接隐藏错误信息 xyb 2007-07-26</span></span><br><span class="line"><span class="keyword">var</span> errid = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main_errors&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> anoId != <span class="string">&quot;undefined&quot;</span> )&#123;</span><br><span class="line"><span class="keyword">if</span> ( anoId!= <span class="string">&quot;&quot;</span> )</span><br><span class="line">errid=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(anoId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> jQuery!= <span class="string">&quot;undefined&quot;</span>)&#123;</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="string">&quot;.main_errors&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="string">&quot;#main_errors&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">errid.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">typeof</span> anoId != <span class="string">&quot;undefined&quot;</span> )&#123;</span><br><span class="line"><span class="keyword">if</span> ( anoId!= <span class="string">&quot;&quot;</span> )</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;main_errors&quot;</span>).<span class="property">style</span>.<span class="property">display</span>=<span class="string">&quot;none&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//正确直接隐藏错误信息 xyb 2007-07-26</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br><span class="line">limit : <span class="keyword">function</span>(<span class="params">len,min, max</span>)&#123;</span><br><span class="line">min = min || <span class="number">0</span>;</span><br><span class="line">max = max || <span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>;</span><br><span class="line"><span class="keyword">return</span> min &lt;= len &amp;&amp; len &lt;= max;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">LenB</span> : <span class="keyword">function</span>(<span class="params">str</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/[^\x00-\xff]/g</span>,<span class="string">&quot;*&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/\s/g</span>,<span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/\n/m</span>,<span class="string">&quot;&quot;</span>).<span class="property">length</span>;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">ClearState</span> : <span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="title function_">with</span>(<span class="params">jQuery(elem)</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;text&quot;</span>||<span class="title function_">attr</span>(<span class="string">&quot;type&quot;</span>)==<span class="string">&quot;password&quot;</span>||<span class="title function_">jQuery</span>(elem)[<span class="number">0</span>].<span class="property">nodeName</span>==<span class="string">&quot;TEXTAREA&quot;</span>)&#123;</span><br><span class="line"><span class="title function_">addClass</span>(<span class="string">&quot;input_ok&quot;</span>);</span><br><span class="line"><span class="title function_">removeClass</span>(<span class="string">&quot;input_err&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> par=<span class="title function_">parent</span>();</span><br><span class="line">par.<span class="title function_">find</span>(<span class="string">&quot;.__ErrorMessagePanel[delete!=&#x27;false&#x27;]&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line"><span class="keyword">var</span> deleteSpan=par.<span class="title function_">find</span>(<span class="string">&quot;.__ErrorMessagePanel[delete=&#x27;false&#x27;]&quot;</span>);</span><br><span class="line"></span><br><span class="line">deleteSpan.<span class="title function_">text</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">deleteSpan.<span class="title function_">removeClass</span>(<span class="string">&quot;__ErrorMessagePanel&quot;</span>);</span><br><span class="line">deleteSpan.<span class="title function_">removeClass</span>(<span class="string">&quot;input_err_info&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">AddError</span> : <span class="keyword">function</span>(<span class="params">index, str,mode</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="variable language_">this</span>.<span class="property">ErrorItem</span>.<span class="property">length</span>] = <span class="variable language_">this</span>.<span class="property">ErrorItem</span>[<span class="number">0</span>].<span class="property">elements</span>[index];</span><br><span class="line"><span class="keyword">if</span> (mode==<span class="number">3</span>||mode==<span class="number">4</span> || <span class="keyword">typeof</span> systemUI!= <span class="string">&quot;undefined&quot;</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorMessage</span>[<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="property">length</span>] = str;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">ErrorMessage</span>[<span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="property">length</span>] = <span class="variable language_">this</span>.<span class="property">ErrorMessage</span>.<span class="property">length</span> + <span class="string">&quot;、&quot;</span> + str;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">Exec</span> : <span class="keyword">function</span>(<span class="params">op, reg</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RegExp</span>(reg,<span class="string">&quot;g&quot;</span>).<span class="title function_">test</span>(op);</span><br><span class="line">&#125;,</span><br><span class="line">compare : <span class="keyword">function</span>(<span class="params">op1,operator,op2</span>)&#123;</span><br><span class="line"><span class="keyword">switch</span> (operator) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;NotEqual&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (op1 != op2);</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GreaterThan&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(op1) &gt; <span class="built_in">parseFloat</span>(op2));</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GreaterThanEqual&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(op1) &gt;= <span class="built_in">parseFloat</span>(op2));</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;LessThan&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(op1) &lt; <span class="built_in">parseFloat</span>(op2));</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;LessThanEqual&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(op1) &lt;= <span class="built_in">parseFloat</span>(op2));</span><br><span class="line"><span class="attr">default</span>:</span><br><span class="line"><span class="keyword">return</span> (op1 == op2);            </span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">between</span>: <span class="keyword">function</span>(<span class="params">nameValue,operator, min, max</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(nameValue!=<span class="string">&quot;&quot;</span>&amp;&amp;nameValue!=<span class="literal">null</span>&amp;&amp;<span class="variable language_">this</span>.<span class="property">Amount</span>.<span class="title function_">test</span>(nameValue))&#123;</span><br><span class="line"><span class="keyword">switch</span> (operator) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GreaterThenLess&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(max)&gt;=<span class="built_in">parseFloat</span>(nameValue)&amp;&amp;<span class="built_in">parseFloat</span>(nameValue) &gt; <span class="built_in">parseFloat</span>(min));    </span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GreaterLessThen&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(max)&gt;<span class="built_in">parseFloat</span>(nameValue)&amp;&amp;<span class="built_in">parseFloat</span>(nameValue) &gt;= <span class="built_in">parseFloat</span>(min));    </span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;GreaterThenLessThen&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(max)&gt;=<span class="built_in">parseFloat</span>(nameValue)&amp;&amp;<span class="built_in">parseFloat</span>(nameValue) &gt;= <span class="built_in">parseFloat</span>(min));    </span><br><span class="line"><span class="attr">default</span>:</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">parseFloat</span>(max)&gt;<span class="built_in">parseFloat</span>(nameValue)&amp;&amp;<span class="built_in">parseFloat</span>(nameValue) &gt; <span class="built_in">parseFloat</span>(min));       </span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">MustChecked</span> : <span class="keyword">function</span>(<span class="params">name, min, max</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> groups = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(name);</span><br><span class="line"><span class="keyword">var</span> hasChecked = <span class="number">0</span>;</span><br><span class="line">min = min || <span class="number">1</span>;</span><br><span class="line">max = max || groups.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=groups.<span class="property">length</span>-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(groups[i].<span class="property">checked</span>) hasChecked++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> min &lt;= hasChecked &amp;&amp; hasChecked &lt;= max;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">DoFilter</span> : <span class="keyword">function</span>(<span class="params">input, filter</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^.+\.(?=EXT)(EXT)$&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/EXT/g</span>, filter.<span class="title function_">split</span>(<span class="regexp">/\s*-\s*/</span>).<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>)), <span class="string">&quot;gi&quot;</span>).<span class="title function_">test</span>(input);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">IsIdCard</span> : <span class="keyword">function</span>(<span class="params">number</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> date, <span class="title class_">Ai</span>;</span><br><span class="line"><span class="keyword">var</span> verify = <span class="string">&quot;10x98765432&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Wi</span> = [<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">var</span> area = [<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>,<span class="string">&#x27;河北&#x27;</span>,<span class="string">&#x27;山西&#x27;</span>,<span class="string">&#x27;内蒙古&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;辽宁&#x27;</span>,<span class="string">&#x27;吉林&#x27;</span>,<span class="string">&#x27;黑龙江&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;江苏&#x27;</span>,<span class="string">&#x27;浙江&#x27;</span>,<span class="string">&#x27;安微&#x27;</span>,<span class="string">&#x27;福建&#x27;</span>,<span class="string">&#x27;江西&#x27;</span>,<span class="string">&#x27;山东&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;河南&#x27;</span>,<span class="string">&#x27;湖北&#x27;</span>,<span class="string">&#x27;湖南&#x27;</span>,<span class="string">&#x27;广东&#x27;</span>,<span class="string">&#x27;广西&#x27;</span>,<span class="string">&#x27;海南&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;重庆&#x27;</span>,<span class="string">&#x27;四川&#x27;</span>,<span class="string">&#x27;贵州&#x27;</span>,<span class="string">&#x27;云南&#x27;</span>,<span class="string">&#x27;西藏&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;陕西&#x27;</span>,<span class="string">&#x27;甘肃&#x27;</span>,<span class="string">&#x27;青海&#x27;</span>,<span class="string">&#x27;宁夏&#x27;</span>,<span class="string">&#x27;新疆&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;台湾&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,<span class="string">&#x27;澳门&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;国外&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> re = number.<span class="title function_">match</span>(<span class="regexp">/^(\d&#123;2&#125;)\d&#123;4&#125;(((\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;))|((\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;[x\d])))$/i</span>);</span><br><span class="line"><span class="keyword">if</span>(re == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(re[<span class="number">1</span>] &gt;= area.<span class="property">length</span> || area[re[<span class="number">1</span>]] == <span class="string">&quot;&quot;</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(re[<span class="number">2</span>].<span class="property">length</span> == <span class="number">12</span>)&#123;</span><br><span class="line"><span class="title class_">Ai</span> = number.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">17</span>);</span><br><span class="line">date = [re[<span class="number">9</span>], re[<span class="number">10</span>], re[<span class="number">11</span>]].<span class="title function_">join</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title class_">Ai</span> = number.<span class="title function_">substr</span>(<span class="number">0</span>, <span class="number">6</span>) + <span class="string">&quot;19&quot;</span> + number.<span class="title function_">substr</span>(<span class="number">6</span>);</span><br><span class="line">date = [<span class="string">&quot;19&quot;</span> + re[<span class="number">4</span>], re[<span class="number">5</span>], re[<span class="number">6</span>]].<span class="title function_">join</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="title class_">IsDate</span>(date, <span class="string">&quot;ymd&quot;</span>)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;=<span class="number">16</span>;i++)&#123;</span><br><span class="line">sum += <span class="title class_">Ai</span>.<span class="title function_">charAt</span>(i) * <span class="title class_">Wi</span>[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Ai</span> +=  verify.<span class="title function_">charAt</span>(sum%<span class="number">11</span>);</span><br><span class="line"><span class="keyword">return</span> (number.<span class="property">length</span> ==<span class="number">15</span> || number.<span class="property">length</span> == <span class="number">18</span> &amp;&amp; number == <span class="title class_">Ai</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title class_">IsDate</span> : <span class="keyword">function</span>(<span class="params">op,daymin,formatString</span>)&#123;</span><br><span class="line">formatString = formatString || <span class="string">&quot;ymd&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> m, year, month, day;</span><br><span class="line"><span class="keyword">switch</span>(formatString)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;md&quot;</span> :<span class="comment">//适合没有年份的判断</span></span><br><span class="line">m = op.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^(\\d&#123;1,2&#125;)([-./])(\\d&#123;1,2&#125;)$&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(m == <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">day = m[<span class="number">3</span>];</span><br><span class="line">month = m[<span class="number">1</span>]*<span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">year =now.<span class="title function_">getYear</span>().<span class="title function_">toString</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;ymd&quot;</span> :</span><br><span class="line">m = op.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^((\\d&#123;4&#125;)|(\\d&#123;2&#125;))([-./])(\\d&#123;1,2&#125;)\\4(\\d&#123;1,2&#125;)$&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(m == <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">day = m[<span class="number">6</span>];</span><br><span class="line">month = m[<span class="number">5</span>]*<span class="number">1</span>;</span><br><span class="line">year =  (m[<span class="number">2</span>].<span class="property">length</span> == <span class="number">4</span>) ? m[<span class="number">2</span>] : <span class="title class_">GetFullYear</span>(<span class="built_in">parseInt</span>(m[<span class="number">3</span>], <span class="number">10</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;dmy&quot;</span> :</span><br><span class="line">m = op.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^(\\d&#123;1,2&#125;)([-./])(\\d&#123;1,2&#125;)\\2((\\d&#123;4&#125;)|(\\d&#123;2&#125;))$&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(m == <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">day = m[<span class="number">1</span>];</span><br><span class="line">month = m[<span class="number">3</span>]*<span class="number">1</span>;</span><br><span class="line">year = (m[<span class="number">5</span>].<span class="property">length</span> == <span class="number">4</span>) ? m[<span class="number">5</span>] : <span class="title class_">GetFullYear</span>(<span class="built_in">parseInt</span>(m[<span class="number">6</span>], <span class="number">10</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span> :</span><br><span class="line">m = op.<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^((\\d&#123;4&#125;)|(\\d&#123;2&#125;))([-./])(\\d&#123;1,2&#125;)\\4(\\d&#123;1,2&#125;)$&quot;</span>));</span><br><span class="line"><span class="keyword">if</span>(m == <span class="literal">null</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">day = m[<span class="number">6</span>];</span><br><span class="line">month = m[<span class="number">5</span>]*<span class="number">1</span>;</span><br><span class="line">year =  (m[<span class="number">2</span>].<span class="property">length</span> == <span class="number">4</span>) ? m[<span class="number">2</span>] : <span class="title class_">GetFullYear</span>(<span class="built_in">parseInt</span>(m[<span class="number">3</span>], <span class="number">10</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">parseInt</span>(month)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">month = month==<span class="number">0</span> ?<span class="number">12</span>:month;</span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(year, month-<span class="number">1</span>, day);</span><br><span class="line">        <span class="keyword">return</span> (<span class="title function_">typeof</span>(date) == <span class="string">&quot;object&quot;</span> &amp;&amp; year == date.<span class="title function_">getFullYear</span>() &amp;&amp; month == (date.<span class="title function_">getMonth</span>()+<span class="number">1</span>) &amp;&amp; day == date.<span class="title function_">getDate</span>());</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">GetFullYear</span>(<span class="params">y</span>)&#123;<span class="keyword">return</span> ((y&lt;<span class="number">30</span> ? <span class="string">&quot;20&quot;</span> : <span class="string">&quot;19&quot;</span>) + y)|<span class="number">0</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Gradle 自动签名发布 Android 应用</title>
      <link href="/2017/06/13/%E4%BD%BF%E7%94%A8-Gradle-%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%90%8D%E5%8F%91%E5%B8%83-Android-%E5%BA%94%E7%94%A8/"/>
      <url>/2017/06/13/%E4%BD%BF%E7%94%A8-Gradle-%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%90%8D%E5%8F%91%E5%B8%83-Android-%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Android要求所有应用都有一个数字签名才会被允许安装在用户手机上，所以在把应用发布到类似应用市场之前，你需要先生成一个签名的APK包。Android开发者官网上的<a href="https://developer.android.com/tools/publishing/app-signing.html">如何给你的应用签名</a>文档描述了签名的细节。本指南旨在提供一个简化的签名和打包js的操作步骤，不会涉及太多理论。</p><h3 id="生成一个签名密钥"><a href="#生成一个签名密钥" class="headerlink" title="生成一个签名密钥"></a>生成一个签名密钥</h3><p>你可以用keytool命令生成一个私有密钥。在Windows上keytool命令放在JDK的bin目录中（比如C:\Program Files\Java\jdkx.x.x_x\bin），你可能需要在命令行中先进入那个目录才能执行此命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore my-release-key.keystore -<span class="built_in">alias</span> my-key-alias -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure><br>这条命令会要求你输入密钥库（keystore）和对应密钥的密码，然后设置一些发行相关的信息。最后它会生成一个叫做my-release-key.keystore的密钥库文件。</p><p>在运行上面这条语句之后，密钥库里应该已经生成了一个单独的密钥，有效期为10000天。–alias参数后面的别名是你将来为应用签名时所需要用到的，所以记得记录这个别名。</p><p><strong>注意：请记得妥善地保管好你的密钥库文件，不要上传到版本库或者其它的地方。</strong></p><h3 id="设置gradle变量"><a href="#设置gradle变量" class="headerlink" title="设置gradle变量"></a>设置gradle变量</h3><ol><li>把my-release-key.keystore文件放到你工程中的android/app文件夹下。</li><li>编辑~/.gradle/gradle.properties（没有这个文件你就创建一个），添加如下的代码（注意把其中的<em>**</em>替换为相应密码）</li></ol><p><strong>注意：~表示用户目录，比如windows上可能是C:\Users\用户名，而mac上可能是/Users/用户名。</strong><br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">MYAPP_RELEASE_STORE_FILE</span>=<span class="string">my-release-key.keystore</span></span><br><span class="line"><span class="attr">MYAPP_RELEASE_KEY_ALIAS</span>=<span class="string">my-key-alias</span></span><br><span class="line"><span class="attr">MYAPP_RELEASE_STORE_PASSWORD</span>=<span class="string">*****</span></span><br><span class="line"><span class="attr">MYAPP_RELEASE_KEY_PASSWORD</span>=<span class="string">*****</span></span><br></pre></td></tr></table></figure><br>上面的这些会作为全局的gradle变量，我们在后面的步骤中可以用来给应用签名。</p><blockquote><p><strong>关于密钥库的注意事项:</strong><br>一旦你在应用市场发布了你的应用，如果想修改签名，就必须用一个不同的包名来重新发布你的应用（这样也会丢失所有的下载数和评分）。所以请务必备份好你的密钥库和密码。</p></blockquote><p>提示：如果你不想以明文方式保存密码，同时你使用的是macOS系统，那么你也可以把密码保存到钥匙串（Keychain）中。这样一来你就可以省略掉上面配置中的后两行（即MYAPP_RELEASE_STORE_PASSWORD和MYAPP_RELEASE_KEY_PASSWORD）。</p><h3 id="添加签名到项目的gradle配置文件"><a href="#添加签名到项目的gradle配置文件" class="headerlink" title="添加签名到项目的gradle配置文件"></a>添加签名到项目的gradle配置文件</h3><p>编辑你项目目录下的<code>android/app/build.gradle</code>，添加如下的签名配置：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123; ... &#125;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            storeFile <span class="title function_">file</span><span class="params">(MYAPP_RELEASE_STORE_FILE)</span></span><br><span class="line">            storePassword MYAPP_RELEASE_STORE_PASSWORD</span><br><span class="line">            keyAlias MYAPP_RELEASE_KEY_ALIAS</span><br><span class="line">            keyPassword MYAPP_RELEASE_KEY_PASSWORD</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ...</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h3 id="生成发行APK包"><a href="#生成发行APK包" class="headerlink" title="生成发行APK包"></a>生成发行APK包</h3><p>在Android项目目录下，只需在终端中运行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew assembleRelease</span><br></pre></td></tr></table></figure><br>注：./gradlew assembleRelease在macOS和Linux系统中表示执行当前目录下的名为gradlew的脚本文件，运行参数为assembleRelease，注意这个./不可省略；而在windows命令行下则需要去掉./。</p><p>生成的APK文件位于<code>app/build/outputs/apk/app-release.apk</code>，它已经可以用来发布了。</p><h3 id="测试应用的发行版本"><a href="#测试应用的发行版本" class="headerlink" title="测试应用的发行版本"></a>测试应用的发行版本</h3><p>在把发行版本提交到应用市场之前，你应该做一次最终测试。输入以下命令可以在设备上安装发行版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew installRelease</span><br></pre></td></tr></table></figure><br>注意<code>installRelease</code>参数只能在你完成了上面的签名配置之后才可以使用。</p><blockquote><p>在debug和release版本间来回切换安装时可能会报错签名不匹配，此时需要先卸载前一个版本再尝试安装。</p></blockquote><h3 id="启用Proguard代码混淆来缩小APK文件的大小（可选）"><a href="#启用Proguard代码混淆来缩小APK文件的大小（可选）" class="headerlink" title="启用Proguard代码混淆来缩小APK文件的大小（可选）"></a>启用Proguard代码混淆来缩小APK文件的大小（可选）</h3><p>Proguard是一个Java字节码混淆压缩工具，它可以移除掉没有被使用到的部分，最终有效的减少APK的大小。</p><p>重要：启用Proguard之后，你必须再次全面地测试你的应用。Proguard有时候需要为你引入的每个原生库做一些额外的配置。参见<code>app/proguard-rules.pro</code>文件。</p><p>要启用Proguard，设置<code>minifyEnabled</code>选项为<code>true</code>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在release发行版中启用Proguard来减小 to shrink the Java bytecode in release builds.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">def</span> <span class="variable">enableProguardInReleaseBuilds</span> <span class="operator">=</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署 Meteor 应用到服务器</title>
      <link href="/2017/06/02/%E9%83%A8%E7%BD%B2Meteor%E5%BA%94%E7%94%A8%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2017/06/02/%E9%83%A8%E7%BD%B2Meteor%E5%BA%94%E7%94%A8%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>这里介绍一种只使用 Meteor 自身的 build 命令，再加上 pm2 来部署 Meteor 应用的方法。不过最好你的本地开发电脑可以翻墙，这样安装 Meteor 和相关的 npm 包更顺畅。</p><h3 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h3><ol><li>安装 Node.js 稳定版，建议从源码编译安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v6.10.3/node-v6.10.3.tar.gz</span><br><span class="line">tar zxvf node-v6.10.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> node-v6.10.3</span><br><span class="line">./configure</span><br><span class="line">make <span class="comment"># make 时间会比较长</span></span><br><span class="line">sudo make install <span class="comment"># 如果使用非 root 账号，需要加 sudo</span></span><br><span class="line">node -v <span class="comment"># 检查一下 nodejs 是否安装成功</span></span><br></pre></td></tr></table></figure></li><li>安装 MongoDB<br>MongoDB 官方的源在中国太慢，一般需要大概 3 个小时完成下载，推荐使用清华大学的源，<a href="https://mirror.tuna.tsinghua.edu.cn/help/mongodb/">详细步骤见这里</a></li><li>安装 pm2<br>跟安装其他 npm 包类似，需要全局安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure></li><li>代码文件夹<br>创建存放 Meteor build 打包成 Node.js app 后的源代码文件夹：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/meteor</span><br><span class="line"><span class="built_in">mkdir</span> /home/meteor/build</span><br></pre></td></tr></table></figure></li></ol><h3 id="本地打包-Meteor-App"><a href="#本地打包-Meteor-App" class="headerlink" title="本地打包 Meteor App"></a>本地打包 Meteor App</h3><p>假设你的 Meteor 源代码在你的本地开发电脑上一个叫 meteor-app 的文件夹里，我们在它的同级目录建立一个叫 build 的文件夹。然后运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> meteor-app</span><br><span class="line">meteor build --architecture=os.linux.x86_64 ../build</span><br><span class="line">scp ../build/meteor-build-test.tar.gz root@your.server.ip.address:/home/meteor/build</span><br></pre></td></tr></table></figure><br>上面的命令就是把 Meteor app 打包成普通的 Node.js app，然后上传到我们之前在服务器上创建的文件夹里。</p><h3 id="运行-Meteor-App"><a href="#运行-Meteor-App" class="headerlink" title="运行 Meteor App"></a>运行 Meteor App</h3><ol><li>在服务器上进入 /home/meteor/build，然后运行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xvf meteor-build-test.tar.gz <span class="comment"># 解压</span></span><br><span class="line"><span class="built_in">cd</span> bundle/programs/server &amp;&amp; npm install <span class="comment"># 安装依赖</span></span><br></pre></td></tr></table></figure></li><li>回到 bundle 目录配置 pm.json<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cd bundle</span><br><span class="line">vim pm.json</span><br><span class="line"><span class="comment">// 将以下代码写进 pm.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;apps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;appName&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/home/meteor/build/bundle&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;script&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;NODE_ENV&quot;</span><span class="punctuation">:</span> <span class="string">&quot;production&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;WORKER_ID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;PORT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3000&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;ROOT_URL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://your.server.ip.address&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MONGO_URL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mongodb://localhost:27017/meteor&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MONGO_OPLOG_URL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mongodb://localhost:27017/local&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;HTTP_FORWARDED_COUNT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;METEOR_SETTINGS&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>最后运行 <code>pm2 start pm2.json</code> 命令, 你的 meteor 就运行在服务器上了, 输入 <code>http://your.server.ip.address:3000</code> 即可访问。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Meteor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Blob 下载文件流</title>
      <link href="/2017/05/16/%E4%BD%BF%E7%94%A8-Blob-%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E6%B5%81/"/>
      <url>/2017/05/16/%E4%BD%BF%E7%94%A8-Blob-%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一个 Blob对象表示一个不可变的, 原始数据的类似文件对象。Blob表示的数据不一定是一个JavaScript原生格式。 File 接口基于Blob，继承 blob功能并将其扩展为支持用户系统上的文件。 ——from <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob">MDN</a></p></blockquote><p>简单的例子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下载Excel表格为例</span></span><br><span class="line">api.<span class="title function_">exportData</span>(ids).<span class="title function_">then</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([res.<span class="property">data</span>], &#123;<span class="attr">type</span>: <span class="string">&#x27;applicationnd.ms-excel&#x27;</span>&#125;);</span><br><span class="line">    <span class="keyword">var</span> downloadUrl = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(downloadUrl);</span><br><span class="line">    <span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    a.<span class="property">href</span> = downloadUrl;</span><br><span class="line">    a.<span class="property">download</span> = <span class="string">&quot;data.xlsx&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(a);</span><br><span class="line">    a.<span class="title function_">click</span>();</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>判断 iframe 是否加载完成</title>
      <link href="/2017/05/15/%E5%88%A4%E6%96%AD-iframe-%E6%98%AF%E5%90%A6%E5%8A%A0%E8%BD%BD%E5%AE%8C%E6%88%90/"/>
      <url>/2017/05/15/%E5%88%A4%E6%96%AD-iframe-%E6%98%AF%E5%90%A6%E5%8A%A0%E8%BD%BD%E5%AE%8C%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>利用 onload 事件来判断 iframe 是否加载完成：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;iframe&quot;</span>);</span><br><span class="line">iframe.<span class="property">src</span> = <span class="string">&quot;http://www.planabc.net&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (iframe.<span class="property">attachEvent</span>)&#123;</span><br><span class="line">    iframe.<span class="title function_">attachEvent</span>(<span class="string">&quot;onload&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Local iframe is now loaded.&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    iframe.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Local iframe is now loaded.&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(iframe);</span><br></pre></td></tr></table></figure><p>PS：<br><a href="http://msdn.microsoft.com/en-us/library/cc197055(VS.85).aspx">IE 支持 iframe 的 onload 事件</a>，不过是隐形的，需要通过 attachEvent 来注册。</p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 FormData 上传文件</title>
      <link href="/2017/05/13/%E4%BD%BF%E7%94%A8-FormData-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/2017/05/13/%E4%BD%BF%E7%94%A8-FormData-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>XMLHttpRequest Level 2添加了一个新的接口FormData.利用FormData对象,我们可以通过JavaScript用一些键值对来模拟一系列表单控件,我们还可以使用XMLHttpRequest的send()方法来异步的提交这个”表单”.比起普通的ajax,使用FormData的最大优点就是我们可以异步上传一个二进制文件。 ——from <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData">MDN</a></p></blockquote><p>简单的例子：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">UploadFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> fileObj = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;file&quot;</span>).<span class="property">files</span>[<span class="number">0</span>]; <span class="comment">// 获取文件对象</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">FileController</span> = <span class="string">&quot;../file/save&quot;</span>;                    <span class="comment">// 接收上传文件的后台地址 </span></span><br><span class="line">    <span class="comment">// FormData 对象</span></span><br><span class="line">    <span class="keyword">var</span> form = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">    form.<span class="title function_">append</span>(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;hooyes&quot;</span>);                        <span class="comment">// 可以增加表单数据</span></span><br><span class="line">    form.<span class="title function_">append</span>(<span class="string">&quot;file&quot;</span>, fileObj);                           <span class="comment">// 文件对象</span></span><br><span class="line">    <span class="comment">// XMLHttpRequest 对象</span></span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    xhr.<span class="title function_">open</span>(<span class="string">&quot;post&quot;</span>, <span class="title class_">FileController</span>, <span class="literal">true</span>);</span><br><span class="line">    xhr.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;上传完成!&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    xhr.<span class="title function_">send</span>(form);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让 Zsh 终端走代理</title>
      <link href="/2017/05/08/%E8%AE%A9-Zsh-%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86/"/>
      <url>/2017/05/08/%E8%AE%A9-Zsh-%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>在 ~/.zshrc 配置文件中添加下面一段，以后使用的时候输入 proxy 打开代理模式，关闭代理时输入 noproxy 即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># where proxy</span></span><br><span class="line"><span class="function"><span class="title">proxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;http://127.0.0.1:8087&quot;</span></span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;http://127.0.0.1:8087&quot;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy on&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># where noproxy</span></span><br><span class="line"><span class="function"><span class="title">noproxy</span></span> () &#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;HTTP Proxy off&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于本人使用 <a href="https://github.com/XX-net/XX-Net">XX-Net</a> 作为代理，所以默认代理端口为8087，如果使用其他代理软件请注意修改端口。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 XMLHttpRequest 发送 Ajax</title>
      <link href="/2017/05/04/%E4%BD%BF%E7%94%A8-XMLHttpRequest-%E5%8F%91%E9%80%81-Ajax/"/>
      <url>/2017/05/04/%E4%BD%BF%E7%94%A8-XMLHttpRequest-%E5%8F%91%E9%80%81-Ajax/</url>
      
        <content type="html"><![CDATA[<blockquote><p>XMLHttpRequest 是一个API, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 AJAX 中被大量使用。 ——from <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest">MDN</a></p></blockquote><p>简单的例子：<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=<span class="string">&quot;ajaxButton&quot;</span> style=<span class="string">&quot;cursor: pointer; text-decoration: underline&quot;</span>&gt;</span><br><span class="line">  <span class="title class_">Make</span> a request</span><br><span class="line">&lt;/span&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">var</span> httpRequest;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;ajaxButton&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="title function_">makeRequest</span>(<span class="string">&#x27;test.html&#x27;</span>); &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">function</span> <span class="title function_">makeRequest</span>(<span class="params">url</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    httpRequest = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">if</span> (!httpRequest) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">alert</span>(<span class="string">&#x27;Giving up :( Cannot create an XMLHTTP instance&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    httpRequest.<span class="property">onreadystatechange</span> = alertContents;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    httpRequest.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, url);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    httpRequest.<span class="title function_">send</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">function</span> <span class="title function_">alertContents</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">if</span> (httpRequest.<span class="property">readyState</span> === <span class="title class_">XMLHttpRequest</span>.<span class="property">DONE</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (httpRequest.<span class="property">status</span> === <span class="number">200</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(httpRequest.<span class="property">responseText</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(<span class="string">&#x27;There was a problem with the request.&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>简易版本：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">url, type, success, error</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> http = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    http.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (http.<span class="property">readyState</span> === <span class="title class_">XMLHttpRequest</span>.<span class="property">DONE</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (http.<span class="property">status</span> === <span class="number">200</span>) success &amp;&amp; <span class="title function_">success</span>(http.<span class="property">responseText</span>);</span><br><span class="line">            <span class="keyword">else</span> error &amp;&amp; <span class="title function_">error</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    http.<span class="title function_">open</span>(type, url);</span><br><span class="line">    http.<span class="title function_">send</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Finder 在当前目录打开 iTerm2</title>
      <link href="/2017/04/25/Finder-%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E6%89%93%E5%BC%80-iTerm2/"/>
      <url>/2017/04/25/Finder-%E5%9C%A8%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E6%89%93%E5%BC%80-iTerm2/</url>
      
        <content type="html"><![CDATA[<p>使用 Automator 编写脚本即可实现使用快捷键在当前目录开启终端：</p><ol><li>打开Automator，选择新建，选择服务</li><li>服务接受设为没有输入，位置设为Finder<br><img src="http://7xoor3.com1.z0.glb.clouddn.com/blog/QQ20170421-171914.png" alt="20170421"></li><li>从左侧的资源库中找出 运行AppleScript，拖到右侧，然后保存为Open iTerm Here<br><img src="http://7xoor3.com1.z0.glb.clouddn.com/blog/QQ20170421-172049.png" alt="20170421"></li><li>在刚刚创建的AppleScript的输入框中输入如下代码 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">on run &#123;input, parameters&#125;</span><br><span class="line"></span><br><span class="line">tell application <span class="string">&quot;Finder&quot;</span></span><br><span class="line"><span class="built_in">set</span> pathList to (quoted form of POSIX path of (folder of the front window as <span class="built_in">alias</span>))</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">command</span> to <span class="string">&quot;clear; cd &quot;</span> &amp; pathList</span><br><span class="line">end tell</span><br><span class="line"></span><br><span class="line">tell application <span class="string">&quot;System Events&quot;</span></span><br><span class="line"><span class="comment"># some versions might identify as &quot;iTerm2&quot; instead of &quot;iTerm&quot;</span></span><br><span class="line"><span class="built_in">set</span> isRunning to (exists (processes <span class="built_in">where</span> name is <span class="string">&quot;iTerm&quot;</span>)) or (exists (processes <span class="built_in">where</span> name is <span class="string">&quot;iTerm2&quot;</span>))</span><br><span class="line">end tell</span><br><span class="line"></span><br><span class="line">tell application <span class="string">&quot;iTerm&quot;</span></span><br><span class="line">activate</span><br><span class="line"><span class="built_in">set</span> hasNoWindows to ((count of windows) is 0)</span><br><span class="line"><span class="keyword">if</span> isRunning and hasNoWindows <span class="keyword">then</span></span><br><span class="line">create window with default profile</span><br><span class="line">end <span class="keyword">if</span></span><br><span class="line">select first window</span><br><span class="line"></span><br><span class="line">tell the first window</span><br><span class="line"><span class="keyword">if</span> isRunning and hasNoWindows is <span class="literal">false</span> <span class="keyword">then</span></span><br><span class="line">create tab with default profile</span><br><span class="line">end <span class="keyword">if</span></span><br><span class="line">tell current session to write text <span class="built_in">command</span></span><br><span class="line">end tell</span><br><span class="line">end tell</span><br><span class="line"></span><br><span class="line">end run</span><br></pre></td></tr></table></figure></li><li>然后通知iTerm的第一个窗口新建标签并跳到这个目录去</li><li>最后再去键盘设置里改一下快捷键，然后就可以快速在Finder中通过iTerm打开当前目录了<br><img src="http://7xoor3.com1.z0.glb.clouddn.com/blog/QQ20170421-172951.png" alt="0170421"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Xcode 离线下载地址</title>
      <link href="/2017/04/21/Xcode-%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/"/>
      <url>/2017/04/21/Xcode-%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p>由于 Xcode 体积过大，App Store 下载缓慢，经常导致下载失败，使用迅雷离线下载可以大大加快 Xcode 的下载速度，以下贴出各版本的 Xcode 下载地址，直接将地址拷贝到迅雷即可下载。</p><p><img src="http://is2.mzstatic.com/image/thumb/Purple111/v4/fa/cd/fa/facdfaf5-ade9-f70f-6815-c4863c69cf6e/source/175x175bb.png" alt="xcode"></p><h4 id="Xcode8"><a href="#Xcode8" class="headerlink" title="Xcode8"></a>Xcode8</h4><ul><li>8.3.1: <a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.3.1/Xcode_8.3.1.xip">http://adcdownload.apple.com/Developer_Tools/Xcode_8.3.1/Xcode_8.3.1.xip</a></li><li>8.2.1：<a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip">http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip</a></li><li>8.2：<a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.2/Xcode_8.2.xip">http://adcdownload.apple.com/Developer_Tools/Xcode_8.2/Xcode_8.2.xip</a></li><li>8.1：<a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8.1/Xcode_8.1.xip">http://adcdownload.apple.com/Developer_Tools/Xcode_8.1/Xcode_8.1.xip</a></li><li>8.0：<a href="http://adcdownload.apple.com/Developer_Tools/Xcode_8/Xcode_8.xip">http://adcdownload.apple.com/Developer_Tools/Xcode_8/Xcode_8.xip</a><h4 id="Xcode7"><a href="#Xcode7" class="headerlink" title="Xcode7"></a>Xcode7</h4></li><li>7.3.1：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg</a></li><li>7.3：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.3/Xcode_7.3.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.3/Xcode_7.3.dmg</a></li><li>7.2.1：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.2.1/Xcode_7.2.1.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.2.1/Xcode_7.2.1.dmg</a></li><li>7.2：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.2/Xcode_7.2.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.2/Xcode_7.2.dmg</a></li><li>7.1.1：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.1.1/Xcode_7.1.1.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.1.1/Xcode_7.1.1.dmg</a></li><li>7.1：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.1/Xcode_7.1.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7.1/Xcode_7.1.dmg</a></li><li>7.0：<br><a href="https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7/Xcode_7.dmg">https://developer.apple.com/services-account/download?path=/Developer_Tools/Xcode_7/Xcode_7.dmg</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>让Finder标题显示当前路径</title>
      <link href="/2017/04/19/%E8%AE%A9Finder%E6%A0%87%E9%A2%98%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84/"/>
      <url>/2017/04/19/%E8%AE%A9Finder%E6%A0%87%E9%A2%98%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p>很多情况下，我们都需要知道当前在那个目录，而 Mac 的资源管理器却默认不显示路径，开启的方法也很简单，只要在终端里输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES killall Finder</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>更新Github fork后的项目代码</title>
      <link href="/2017/03/17/%E6%9B%B4%E6%96%B0Github-fork%E5%90%8E%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81/"/>
      <url>/2017/03/17/%E6%9B%B4%E6%96%B0Github-fork%E5%90%8E%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="1-配置远程的upstream-地址"><a href="#1-配置远程的upstream-地址" class="headerlink" title="1. 配置远程的upstream 地址"></a>1. 配置远程的upstream 地址</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git</span><br></pre></td></tr></table></figure><h3 id="2-对upstream的代码更新"><a href="#2-对upstream的代码更新" class="headerlink" title="2. 对upstream的代码更新"></a>2. 对upstream的代码更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch upstream</span><br></pre></td></tr></table></figure><h3 id="3-进行代码合并"><a href="#3-进行代码合并" class="headerlink" title="3. 进行代码合并"></a>3. 进行代码合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge upstream/master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android应用签名</title>
      <link href="/2016/12/21/Android%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D/"/>
      <url>/2016/12/21/Android%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -v -keystore app-release-key.keystore -<span class="built_in">alias</span> app-release-key.keystore -keyalg RSA -keysize 2048 -validity 10000</span><br></pre></td></tr></table></figure><h3 id="签名apk"><a href="#签名apk" class="headerlink" title="签名apk"></a>签名apk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jarsigner -verbose -sigalg SHA256withRSA -tsa https://timestamp.geotrust.com/tsa -digestalg SHA1 -keystore app-release-key.keystore app-release-unsigned.apk app-release-key.keystore</span><br></pre></td></tr></table></figure><h3 id="优化APK"><a href="#优化APK" class="headerlink" title="优化APK"></a>优化APK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zipalign -v 4 app-release-unsigned.apk app-1.0.0.apk</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接Redux调试服务器</title>
      <link href="/2016/08/21/%E8%BF%9E%E6%8E%A5Redux%E8%B0%83%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2016/08/21/%E8%BF%9E%E6%8E%A5Redux%E8%B0%83%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>检查设备是否成功连接，运行<code>adb devices</code></li><li>检查 5678 端口是否被占用</li><li>运行<code>adb reverse tcp:5678 tcp:5678</code></li><li>摇晃设备，或者运行<code>adb shell input keyevent 82</code>，可以打开开发者菜单</li><li>点击<code>Debug JS Remote</code>即可连接Redux调试服务器</li></ol>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ReactNative从设备上访问开发服务器</title>
      <link href="/2016/06/22/ReactNative%E4%BB%8E%E8%AE%BE%E5%A4%87%E4%B8%8A%E8%AE%BF%E9%97%AE%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2016/06/22/ReactNative%E4%BB%8E%E8%AE%BE%E5%A4%87%E4%B8%8A%E8%AE%BF%E9%97%AE%E5%BC%80%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Android-5-0及以上"><a href="#Android-5-0及以上" class="headerlink" title="Android 5.0及以上"></a>Android 5.0及以上</h3><p>使用adb reverse命令</p><ol><li>首先把你的设备通过USB数据线连接到电脑上，并开启USB调试。</li><li>运行<code>adb reverse tcp:8081 tcp:8081</code></li></ol><p>不需要更多配置，你就可以使用Reload JS和其它的开发选项了。</p><h3 id="Android-5-0以下"><a href="#Android-5-0以下" class="headerlink" title="Android 5.0以下"></a>Android 5.0以下</h3><p>通过Wi-Fi连接你的本地开发服务器</p><ol><li>首先确保你的电脑和手机设备在同一个Wi-Fi环境下。</li><li>在设备上运行你的React Native应用。和打开其它App一样操作。</li><li>你应该会看到一个“红屏”错误提示。这是正常的，下面的步骤会解决这个报错。</li><li>摇晃设备，或者运行<code>adb shell input keyevent 82</code>，可以打开开发者菜单。</li><li>点击进入<code>Dev Settings</code>。</li><li>点击<code>Debug server host for device</code>。</li><li>输入你电脑的IP地址和端口号（譬如10.0.1.1:8081）。<ul><li>在Mac上，你可以在系统设置/网络里找查询你的IP地址。</li><li>在Windows上，打开命令提示符并输入ipconfig来查询你的IP地址。</li><li>在Linux上你可以在终端中输入ifconfig来查询你的IP地址。</li></ul></li><li>回到开发者菜单然后选择Reload JS。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu搭建svn服务器</title>
      <link href="/2016/05/02/ubuntu%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2016/05/02/ubuntu%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>安装SVN<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install subversion</span><br></pre></td></tr></table></figure></li><li>建立svn仓库<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/.svn <span class="comment">#使用隐藏目录建立svn目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/.svn</span><br><span class="line"><span class="built_in">mkdir</span> zeven <span class="comment">#创建仓库目录</span></span><br><span class="line">svnadmin create /home/.svn/zeven <span class="comment">#初始化目录为svn仓库</span></span><br><span class="line"><span class="comment">#执行完毕后zeven目录有svnadmin创建的目录和文件</span></span><br></pre></td></tr></table></figure></li><li><p>配置和管理svn</p><ul><li>每个仓库的配置文件在$repos/conf/下，vi svnserve.conf，配置项在[general]下:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">anon-access：匿名用户的权限，可以为read，write和none，默认值read。不允许匿名用户访问设置为none</span><br><span class="line">auth-access：认证用户的权限，可以为read，write和none，默认值write。</span><br><span class="line">password-db：密码数据库的路径，去掉前边的#</span><br><span class="line">authz-db：认证规则库的路径，去掉前边的#。</span><br><span class="line">注意：这些配置项的行都要顶格，否则会报错。修改配置后需要重启svn才能生效。</span><br></pre></td></tr></table></figure></li><li>配置passwd文件<br>这是每个用户的密码文件，比较简单，就是“用户名=密码”，采用的是明码。如fang=123456</li></ul></li><li><p>设置权限，配置authz文件</p><ul><li>[groups] section：为了便于管理，可以将一些用户放到一个组里边，比如：owner=zeven,fang</li><li>groups下边的sections表示对一个目录的认证规则，比如对根目录的认证规则的section为[/]。设置单用户的认证规则时一个用户一行，如：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[/]</span></span><br><span class="line"><span class="attr">allen</span>=rw　　<span class="comment">#allen对根目录的权限为rw</span></span><br><span class="line"><span class="attr">ellen</span>=r　　  <span class="comment">#ellen对根目录的权限为r</span></span><br><span class="line"><span class="comment">#如果使用group，需要在group名字前加@,如</span></span><br><span class="line">@<span class="attr">owner</span>=rw　　<span class="comment">#group owner中的用户均为rw，等价于上边的两句话</span></span><br></pre></td></tr></table></figure></li><li>启动时如果从/home/.svn/astar启动，/就是astar目录，用如上方式以astar目录为根设置权限。</li><li>如果从/home/.svn/启动，每个仓库根还是自己的起始目录。可以采用如上方式设置astar的权限，也可以采用如下方式：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[astar:/]</span></span><br><span class="line">@<span class="attr">owner</span>=rw</span><br><span class="line"><span class="comment">#设置test的权限如下：</span></span><br><span class="line"><span class="section">[test:/]</span></span><br><span class="line">@<span class="attr">harry_and_sally</span> = rw</span><br></pre></td></tr></table></figure></li><li>简言之，每个仓库的根目录(/)就是自己的起始目录；[repos:/]这种方式只适用于多仓库的情况；[/]适合于单仓库和单仓库的方式，不能跨越仓库设置权限。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> svn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongodb的基本操作（CRUD）</title>
      <link href="/2016/04/26/mongodb%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%88CRUD%EF%BC%89/"/>
      <url>/2016/04/26/mongodb%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%88CRUD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<ol><li>查看当前系统的数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure></li><li>切换到test数据库（如不存在就创建）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br></pre></td></tr></table></figure></li><li>删除当前所在的数据库<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="title function_">dropDatabase</span>()</span><br></pre></td></tr></table></figure></li><li>创建user集合并插入一条数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">insert</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;Mickle&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>查看当前数据库中的所有集合<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure></li><li>查看集合中的数据，’_id’索引由系统自动生成，也可以自己指定<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">find</span>()</span><br></pre></td></tr></table></figure></li><li>在集合中查找Mickle的数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">find</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;Mickle&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>在mongodb可以使用js语法插入多条数据：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++) db.<span class="property">user</span>.<span class="title function_">insert</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;user&#x27;</span>+i&#125;)</span><br></pre></td></tr></table></figure></li><li>计算集合中的数据条目<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">find</span>().<span class="title function_">count</span>()</span><br></pre></td></tr></table></figure></li><li>选择第4条和第5条记录<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">find</span>().<span class="title function_">skip</span>(<span class="number">3</span>).<span class="title function_">limit</span>(<span class="number">2</span>)</span><br></pre></td></tr></table></figure></li><li>更新数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">update</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;Mickle&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;Anmy&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>只修改一条记录中的其中一项数据，如<code>&#123;x:100,y:100,z:100&#125;</code>，使用<code>$set</code>部分更新符只将z为100中的y值修改为99<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">test</span>.<span class="title function_">update</span>(&#123;<span class="attr">z</span>:<span class="number">100</span>&#125;，&#123;<span class="attr">$set</span>:&#123;<span class="attr">y</span>:<span class="number">99</span>&#125;&#125;)</span><br><span class="line">db.<span class="property">user</span>.<span class="title function_">update</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;aaa&#x27;</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">&#x27;Mickle&#x27;</span>&#125;,<span class="literal">true</span>) <span class="comment">//第三个参数为true时表示，如果数据aaa不存在则插入一条Mickle数据</span></span><br></pre></td></tr></table></figure></li><li>为了防止误操作，mongodb的update操作只会更新第一条数据，必须将第四个参数设置为<code>true</code>，才会执行批量更新操作，并且只能使用部分更新$set进行操作<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">test</span>.<span class="title function_">update</span>(&#123;<span class="attr">x</span>:<span class="number">1</span>&#125;,&#123;$set&#123;<span class="attr">y</span>:<span class="number">99</span>&#125;&#125;),<span class="literal">false</span>,<span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li>删除name为user0的数据<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">remove</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;user0&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure></li><li>删除选择的集合<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">user</span>.<span class="title function_">drop</span>()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易搭建mongodb</title>
      <link href="/2016/04/26/%E7%AE%80%E6%98%93%E6%90%AD%E5%BB%BAmongodb/"/>
      <url>/2016/04/26/%E7%AE%80%E6%98%93%E6%90%AD%E5%BB%BAmongodb/</url>
      
        <content type="html"><![CDATA[<ol><li><code>mkdir mongodb</code> 创建一个文件夹</li><li><code>cd mongodb</code> 进入目录</li><li><code>mkdir data</code> 创建存放数据的目录</li><li><code>mkdir log</code> 创建日志文件的目录</li><li><code>mkdir conf</code> 存放启动配置文件</li><li><code>mkdir bin</code> 存放mongodb的二进制文件</li><li><code>cp mongo-r2.6.5/mongod mongodb/bin</code> 将源二进制文件拷贝进bin目录</li><li><code>vim conf/mongod.conf</code> 编辑配置文件，写入以下配置：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span> = <span class="number">12345</span></span><br><span class="line"><span class="attr">dbpath</span> = data</span><br><span class="line"><span class="attr">logpath</span> = log/mongod.log</span><br><span class="line"><span class="attr">fork</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment">#fork在Linux下表明启动一个后台进程，在windows下则无效</span></span><br></pre></td></tr></table></figure></li><li>直接启动mongodb进程<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/mongod –f conf/mongod.conf</span><br></pre></td></tr></table></figure></li><li>安全启动mongodb进程<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> mongo-r2.6.5/mongo /bin <span class="comment">#将mongo客户端拷贝到/bin目录下</span></span><br><span class="line">/bin/mongo 127.0.0.1:12345/test <span class="comment">#连接并在本机创建一个test数据库</span></span><br><span class="line">numactl --interleave=all bin/mongod –f conf/mongod.conf</span><br></pre></td></tr></table></figure></li><li>安装numactl<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install numactl</span><br><span class="line"><span class="comment">#使用numactl安全启用mongodb服务，这样启动mongodb服务就不会出现警告。</span></span><br></pre></td></tr></table></figure></li><li>关闭mongodb服务, 使用<code>killall mongod</code>或者在client的shell里，<code>use admin</code>，执行<code>db.shutdownServer()</code>即可！</li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu常用命令及快捷键</title>
      <link href="/2016/04/25/Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2016/04/25/Ubuntu%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux —— K.I.S.S.</p><blockquote><p>Keep it simple,stupid!</p></blockquote></blockquote><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ol><li><code>Ctrl+Shift+T</code> 打开terminal终端软件</li><li><code>Ctrl+Alt+F1</code> 切换到第一个工作台</li><li><code>Ctrl+Alt+F7</code> 切换到可视化工作台</li><li><code>Ctrl+D</code> 退出终端打开的程序回到shell环境</li><li><code>Ctrl+L</code> 清屏</li><li><code>Tab</code> 键可以自动补齐命令，两次tab键可以查看可补齐的内容</li></ol><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ol><li><code>ls</code> 列出当前目录内容</li><li><code>ls –l dir</code> 查看一个目录下文件的操作权限</li><li><code>ls –ld dir</code> 查看所在目录的操作权限</li><li><code>less</code> 将命令行的内容分页查看，而不是一次性全部输出</li><li><code>ps aux|less</code> 分页查看进程状态</li><li><code>mkdir</code> 创建一个目录(eg: mkdir ttt)</li><li><code>rm</code> 删除一个文件，但不能直接删除目录(eg: rm a.txt)</li><li><code>rm –r</code> 添加-r参数可以删除目录</li><li><code>man+</code> 命令：打开某个命令的帮助，具体到某个参数的使用说明，/+参数即可查阅</li><li>重定向（将shell输出到文本）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello&#x27;</span> &gt; hello.txt <span class="comment">#标准输出</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;error&#x27;</span> 2&gt; error.txt <span class="comment">#错误输出</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;world&#x27;</span> &gt;&gt; hello.txt <span class="comment">#向已有追加内容</span></span><br></pre></td></tr></table></figure></li><li>sudo 使用管理员权限执行命令(eg: sudo chmod 777 a.txt)</li><li>chmod修改文件权限（实例说明）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+x file <span class="comment">#给file的属主增加执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> 751 file</span><br><span class="line"><span class="comment">#给file的属主分配读、写、执行(7)的权限，</span></span><br><span class="line"><span class="comment">#给file的所在组分配读、执行(5)的权限，</span></span><br><span class="line"><span class="comment">#给其他用户分配执行(1)的权限</span></span><br><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=x file <span class="comment">#上例的另一种形式</span></span><br><span class="line"><span class="built_in">chmod</span> =r file <span class="comment">#为所有用户分配读权限</span></span><br><span class="line"><span class="built_in">chmod</span> 444 file <span class="comment">#同上例</span></span><br><span class="line"><span class="built_in">chmod</span> a-wx,a+r file <span class="comment">#同上例</span></span><br><span class="line"><span class="built_in">chmod</span> -R u+r directory <span class="comment">#递归地给directory目录下所有文件和子目录的属主分配读的权限</span></span><br><span class="line"><span class="built_in">chmod</span> 4755 <span class="comment">#设置用ID，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html5自定义表单提示</title>
      <link href="/2016/04/24/html5%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%A8%E5%8D%95%E6%8F%90%E7%A4%BA/"/>
      <url>/2016/04/24/html5%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%A8%E5%8D%95%E6%8F%90%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p>html5是目前最新版的超文本标记语言，结合了javascript/css/html使得标签功能更加强大，下面介绍html5自定义表单提示：<br><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=<span class="string">&quot;passwordChange&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password1&quot;</span>&gt;</span>New Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password1&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;checkPasswords()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password2&quot;</span>&gt;</span>Confirm Password:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password2&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;checkPasswords()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;document.passwordChange.password1.checkValidity()&quot;</span>&gt;</span>Check Validity<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">checkPasswords</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> pass1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password1&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> pass2 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;password2&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (pass1.<span class="property">value</span> != pass2.<span class="property">value</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            pass1.<span class="title function_">setCustomValidity</span>(<span class="string">&quot;两次输入的密码不匹配&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">else</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            pass1.<span class="title function_">setCustomValidity</span>(<span class="string">&quot;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP header()函数</title>
      <link href="/2016/04/24/PHP-header-%E5%87%BD%E6%95%B0/"/>
      <url>/2016/04/24/PHP-header-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>在php程序代码中，我们可以使用header()函数向http协议头写入头信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制跳转到新的页面</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: 新的页面&quot;</span>);</span><br><span class="line"><span class="comment">//控制浏览器间隔一定的时间去跳转，例子为3秒</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Refresh:3;url=http://localhost.com&quot;</span>);</span><br><span class="line"><span class="comment">//通过header来禁用缓存（ajax），一共需要写入三个头消息</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Rxpires:-1&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Cache-Control:no_cache&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Pragma:no_cache&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP防盗链技术</title>
      <link href="/2016/04/24/PHP%E9%98%B2%E7%9B%97%E9%93%BE%E6%8A%80%E6%9C%AF/"/>
      <url>/2016/04/24/PHP%E9%98%B2%E7%9B%97%E9%93%BE%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//通过获取http协议的消息头的REFERER来防盗链</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]))&#123;<span class="comment">//判断REFERER是否为http://localhost开头的</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>],<span class="string">&quot;http://localhost&quot;</span>)==<span class="number">0</span>)&#123;<span class="comment">//非本网站访问全部封杀</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;本网站用户，可以或查看链接&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">//否则跳转到警告页面</span></span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: warning.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="comment">//否则跳转到警告页面</span></span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: warning.html&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Backend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL触发器</title>
      <link href="/2016/04/24/MySQL%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
      <url>/2016/04/24/MySQL%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>触发器（trigger）是提供给程序员和数据分析员来保证数据完整性的一种方法，它是与表事件相关的特殊的存储过程，它的执行不是由程序调用，也不是手工启动，而是由事件来触发，比如当对一个表进行操作（ insert，delete， update）时就会激活它执行。触发器经常用于加强数据的完整性约束和业务规则等。 触发器可以从 DBA_TRIGGERS ，USER_TRIGGERS 数据字典中查到。</p><p>作者：纸帆<br>链接：<a href="https://juejin.cn/post/7082214959580446734/">https://juejin.cn/post/7082214959580446734/</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>触发器:</p><ol><li>能监视: 增,删,改</li><li>触发操作: 增,删,改</li></ol><p>四要素:</p><ul><li>监视地点</li><li>监视事件</li><li>触发时间</li><li>触发事件</li></ul><p>创建触发器的语法<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> triggerName</span><br><span class="line">  after<span class="operator">/</span>before <span class="keyword">insert</span><span class="operator">/</span><span class="keyword">update</span><span class="operator">/</span><span class="keyword">delete</span> <span class="keyword">on</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span></span><br><span class="line">  <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span> <span class="comment">-- 这句话是固定的</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="operator">&lt;</span><span class="keyword">sql</span>语句<span class="operator">&gt;</span>;  <span class="comment">-- 一句或多句,insert/update/delete范围内</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><br>删除触发器的语法:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Drop</span> <span class="keyword">trigger</span> <span class="operator">&lt;</span>触发器名<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><br>查看触发器:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Show</span> triggers</span><br></pre></td></tr></table></figure><br>如何在触发器引用行的值:</p><ul><li>对于insert而言, 新增的行 用new来表示</li><li>行中的每一列的值 ,用new.列名来表示</li><li>对于 delete来说, 原本有一行,后来被删除</li><li>想引用被删除的这一行,用old来表示,  old.列名,就可以引用被删行中的值</li><li>对于update来说,被修改的行</li><li>修改前的数据 ,用old来表示, old.列名引用被修改之前行中的值</li><li>修改后的数据,用new 来表示, new.列名引用被修改之后行中的值</li></ul><p>触发器里after 和before的区别:</p><ul><li>After 是先完成数据的增,删,改再触发,<br>触发的语句晚于监视的增,删,改,无法影响前面的增删改动作.</li><li>Before是先完成触发,再增删改,<br>触发的语句先于监视的增,删,改发生,我们有机会判断,修改即将发生的操作</li></ul><p>典型案例:</p><ul><li>对于所下订单,进行判断,如果订单的数量 &gt; 5，就认为是恶意订单，<br>强制把所订的商品数量改成5。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL用户授权</title>
      <link href="/2016/04/24/MySQL%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83/"/>
      <url>/2016/04/24/MySQL%E7%94%A8%E6%88%B7%E6%8E%88%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p>用户管理<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br></pre></td></tr></table></figure><br>查看<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,password <span class="keyword">from</span> <span class="keyword">user</span> ;</span><br></pre></td></tr></table></figure><br>创建<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> zx_root IDENTIFIED <span class="keyword">by</span> <span class="string">&#x27;xxxxx&#x27;</span>;</span><br><span class="line"><span class="comment">--identified by 会将纯文本密码加密作为散列值存储</span></span><br></pre></td></tr></table></figure><br>修改<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rename <span class="keyword">user</span> feng <span class="keyword">to</span> newuser;</span><br><span class="line"><span class="comment">--mysql 5之后可以使用，之前需要使用update 更新user表</span></span><br></pre></td></tr></table></figure><br>删除<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> newuser;</span><br><span class="line"><span class="comment">--mysql5之前删除用户时必须先使用revoke 删除用户权限，然后删除用户，mysql5之后drop 命令可以删除用户的同时删除用户的相关权限</span></span><br></pre></td></tr></table></figure><br>更改密码<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> password <span class="keyword">for</span> zx_root <span class="operator">=</span>password(<span class="string">&#x27;xxxxxx&#x27;</span>);</span><br><span class="line"><span class="keyword">update</span>  mysql.user  <span class="keyword">set</span>  password<span class="operator">=</span>password(<span class="string">&#x27;xxxx&#x27;</span>)  <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;otheruser&#x27;</span></span><br></pre></td></tr></table></figure><br>查看用户权限<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> zx_root;</span><br></pre></td></tr></table></figure><br>赋予权限<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> dmc_db.<span class="operator">*</span>  <span class="keyword">to</span> zx_root;</span><br></pre></td></tr></table></figure><br>回收权限<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span>  <span class="keyword">select</span> <span class="keyword">on</span> dmc_db.<span class="operator">*</span>  <span class="keyword">from</span>  zx_root;</span><br><span class="line"><span class="comment">--如果权限不存在会报错</span></span><br></pre></td></tr></table></figure><br>上面的命令也可使用多个权限同时赋予和回收，权限之间使用逗号分隔<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>，<span class="keyword">update</span>，<span class="keyword">delete</span>  ，<span class="keyword">insert</span>  <span class="keyword">on</span> dmc_db.<span class="operator">*</span>  <span class="keyword">to</span>  zx_root;</span><br></pre></td></tr></table></figure><br>如果想立即看到结果使用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><br>命令更新<br>设置权限时必须给出一下信息</p><ol><li>要授予的权限</li><li>被授予访问权限的数据库或表</li><li>用户名</li></ol><p>grant和revoke可以在几个层次上控制访问权限</p><ul><li>整个服务器，使用 grant ALL  和revoke  ALL</li><li>整个数据库，使用on  database.*</li><li>特点表，使用on  database.table</li><li>特定的列</li><li>特定的存储过程</li></ul><p>user表中host列的值的意义</p><ul><li>%              匹配所有主机</li><li>localhost    localhost不会被解析成IP地址，直接通过UNIXsocket连接</li><li>127.0.0.1      会通过TCP/IP协议连接，并且只能在本机访问；</li><li>::1                 ::1就是兼容支持ipv6的，表示同ipv4的127.0.0.1</li></ul><p>grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> common_user@<span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">insert</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> common_user@<span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">update</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> common_user@<span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">delete</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> common_user@<span class="string">&#x27;%&#x27;</span></span><br></pre></td></tr></table></figure><p>或者，用一条 MySQL 命令来替代：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>, <span class="keyword">insert</span>, <span class="keyword">update</span>, <span class="keyword">delete</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> common_user@<span class="string">&#x27;%&#x27;</span></span><br></pre></td></tr></table></figure><br>grant 数据库开发人员，创建表、索引、视图、存储过程、函数。。。等权限。<br>grant 创建、修改、删除 MySQL 数据表结构权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">alter</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">drop</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 操作 MySQL 外键权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">references</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 操作 MySQL 临时表权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> temporary tables <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 操作 MySQL 索引权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> index <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 操作 MySQL 视图、查看视图源代码 权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">view</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">show</span> <span class="keyword">view</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 操作 MySQL 存储过程、函数 权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> routine <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>; <span class="comment">-- now, can show procedure status</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">alter</span> routine <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>; <span class="comment">-- now, you can drop a procedure</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">execute</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> developer@<span class="string">&#x27;192.168.0.%&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>grant 普通 DBA 管理某个 MySQL 数据库的权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> testdb <span class="keyword">to</span> dba@<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"><span class="comment">--其中，关键字 &quot;privileges&quot; 可以省略。</span></span><br></pre></td></tr></table></figure></p><p>grant 高级 DBA 管理 MySQL 中所有数据库的权限。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> dba@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure></p><p>MySQL grant 权限，分别可以作用在多个层次上。</p><ol><li><p>grant 作用在整个 MySQL 服务器上：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> dba<span class="variable">@localhost</span>; <span class="comment">-- dba 可以查询 MySQL 中所有数据库中的表。</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> dba<span class="variable">@localhost</span>; <span class="comment">-- dba 可以管理 MySQL 中的所有数据库</span></span><br></pre></td></tr></table></figure></li><li><p>grant 作用在单个数据库上：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">on</span> testdb.<span class="operator">*</span> <span class="keyword">to</span> dba<span class="variable">@localhost</span>; <span class="comment">-- dba 可以查询 testdb 中的表。</span></span><br></pre></td></tr></table></figure></li><li><p>grant 作用在单个数据表上：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>, <span class="keyword">insert</span>, <span class="keyword">update</span>, <span class="keyword">delete</span> <span class="keyword">on</span> testdb.orders <span class="keyword">to</span> dba<span class="variable">@localhost</span>;</span><br></pre></td></tr></table></figure></li><li><p>grant 作用在表中的列上：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span>(id, se, rank) <span class="keyword">on</span> testdb.apache_log <span class="keyword">to</span> dba<span class="variable">@localhost</span>;</span><br></pre></td></tr></table></figure></li><li><p>grant 作用在存储过程、函数上：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">execute</span> <span class="keyword">on</span> <span class="keyword">procedure</span> testdb.pr_add <span class="keyword">to</span> <span class="string">&#x27;dba&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">execute</span> <span class="keyword">on</span> <span class="keyword">function</span> testdb.fn_add <span class="keyword">to</span> <span class="string">&#x27;dba&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>注意：修改完权限以后 一定要刷新服务，或者重启服务，刷新服务用：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端技术资源合集</title>
      <link href="/2016/04/24/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/"/>
      <url>/2016/04/24/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E8%B5%84%E6%BA%90%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前端对于网站来说，通常是指，网站的前台部分包括网站的表现层和结构层。因此前端技术一般分为前端设计和前端开发，前端设计一般可以理解为网站的视觉设计，前端开发则是网站的前台代码实现，包括基本的HTML和CSS以及JavaScript/ajax，现在最新的高级版本HTML5、CSS3，以及SVG等。</p><blockquote><p>—— From Baidu Baike</p></blockquote></blockquote><p>HTML5的出现，赋予了前端更多重要的任务，不再停留在平面设计阶段了，更多关注在用户的交互性上和网站的响应速度上。</p><h3 id="前端设计"><a href="#前端设计" class="headerlink" title="前端设计"></a>前端设计</h3><p>主要是对网页页面视觉效果上的设计，具体通过运用html/css来对页面排版和配色，现在已经有很多成形的框架来帮助前端工程师搭建一个高大上的网站：</p><p>bootstrap：<a href="http://getbootstrap.com/">http://getbootstrap.com/</a></p><p>foundation：<a href="http://foundation.zurb.com/">http://foundation.zurb.com/</a></p><p>SemanticUI: <a href="http://semantic-ui.com/">http://semantic-ui.com/</a></p><p>以上框架都是响应式布局框架，能够对不同屏幕适配，对比以上三个框架，bootstrap比较简洁大方，更适合做pc网站，而foundation优先支持手机适配，并且可以自定化下载的功能模块，大大缩小框架的大小，对于跑流量的手机网站更为适合，Semantic UI的设计相当的语义化，容易理解也不用同时使用一大堆样式来显示一个div，最适合开发页面（个人认为…），而且对手机页面支持也做得很好。</p><h3 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h3><p>主要提供数据交互和提高用户的交互体验，甚至可以定义路由，主导页面的跳转（没有做前后端分离，页面一般由后端Controller跳转），熟练使用JavaScript语言相当重要。</p><p>当然现在也有大量可靠的框架了，最常用框架有Extjs</p><p>Extjs，用过一周，然后就果断抛弃了，Extjs可以用来做通用后台管理系统，用js即可定义一个表单，定义一个Form对象，然后定义表单字段，甚至一个xtype:’htmleditor’即可整合一个在线编辑器到表单中，但是样式也是在js中定义好的，基本上一成不变，很难改变样式，而且页面也是由多个iframe组成，对浏览器渲染很不友好，对话框和按钮也是一层一层嵌套进去，代码中间会产生一个很长的缩进。</p><p>JQuery和Zepto.js放一起讲，因为Zepto 的 API 就是完全兼容 jQuery 的，功能上 Zepto 是 jQuery 的子集，定位上 jQuery 桌面为主，Zepto 则从一开始就定位移动设备，所以体积方面有一定优势。也就是说如果你只用了 jQuery 很少且都是核心的功能，比如选择器等，那么可以在不改动任何业务代码的情况下把 lib 切换到 Zepto——其实就是把 $ 对象换掉了。JQuery帮助文档：<a href="http://api.jquery.com/">http://api.jquery.com/</a></p><p><a href="https://angularjs.org/">AngularJs</a>，MVVM双向数据绑定框架，目前由Google在维护的框架。Google出品必属精品（比如：安卓平台），AngularJs是一个十分强大的框架，思想十分前卫，为前后端分离做出巨大的贡献，集成了自身一套的模板引擎，通过就可以在页面上拿到js模板中$scope(作用域)绑定的数据(data)，可以定义过滤器，也有内置的过滤器，比如时间格式转换{timestamp|date:’YYYY-MM-DD’}，可以自定义指令等等……</p><p>但是最强大的是Angular提供的模块化(Module)设计，因此<a href="http://ngmodules.org/modules">Angular社区</a>上有很多强大的开源第三方模块：</p><p><a href="http://ngmodules.org/modules/ui-router">ui-router</a>，尽管Angular自带了路由控制的一套机制，但是还是不够完善，ui-router是专门控制路由的模块，支持多层级路由无限的嵌套，帮助文档<a href="http://angular-ui.github.io/ui-router/site/#/api/ui.router">传送门</a>。</p><p><a href="http://ngmodules.org/modules/ocLazyLoad">ocLazyLoad</a>，可以配合ui-router按需加载文件到页面上，但是路由跳转后不会删除引入的文件，可以通过Dom操作来删除script或link节点，使用懒加载不会让所有文件一次性加载，页面也不会显得太过臃肿，帮助文档<a href="https://oclazyload.readme.io/docs">传送门</a>。</p><p><a href="http://ngmodules.org/modules/ng-cordova">ngCordova</a>，配合cordova开发可以开发出跨平台移动应用，Android/iOS/WinPhone，甚至黑莓OS……，打包成phonegap应用，简直方便到没人性，使用cordova最好对打包的平台有所了解，帮助文档<a href="http://ngcordova.com/docs/plugins/">传送门</a>。</p><h3 id="后端技术"><a href="#后端技术" class="headerlink" title="后端技术"></a>后端技术</h3><p>一个不懂后端的前端不是好前端，半年前我只接触后端的开发，开发过J2EE(SpringMVC+Hibernate)/PHP(ThinkPHP)/Python(半吊子)，了解后端对前端开发十分重要，因为前后端分离后，前端只管ajax向后端要json数据，后端只需要提供相应的api就够了，所以了解后端如何从数据库查数据并且序列化成json数据相当重要。同时要了解HTTP 1.1的协议，了解请求头、请求体、响应头、响应体，方便从调试工具中查看提交的数据和返回的数据，方便对bug的定位。</p><p>作为一名前端，使用NodeJs作为后端是一个很不错的选择，nodejs有包管理工具npm，可以很方便的下载到第三方依赖包，可以先用npm安装前端包管理工具bower，然后再用bower下载前端需要的依赖文件，还可以用npm安装grunt，使用ugly对代码进行压缩混淆，防止别人看到代码。</p><p>NodeJs(express+mongodb)很适合开发web应用的后端，代码的语法跟JavaScript一样，是前端工程师的不二选择，附送传送门：</p><p><a href="https://docs.mongodb.org/manual/?_ga=1.197256426.478103933.1452413886">MongoDB帮助文档</a>、<br><a href="http://expressjs.com/en/4x/api.html">Express帮助文档</a></p><h3 id="移动终端"><a href="#移动终端" class="headerlink" title="移动终端"></a>移动终端</h3><p>严格意义上，移动终端也可以归纳为前端技术，因为移动终端上的开发是客户端开发，都是通过与服务器端数据交互来显示页面。每一个移动终端上的运行的系统一定有个webview组件，提供用户的网页浏览功能。我们可以将webview放大到全屏，并且提供丰富的交互功能，这样是不是就是一个应用了？但是这样还不够，这仅仅实现了页面上的交互，还不能调用系统的组件，例如Android的Toast或iOS上的Core Location。在开发应用时，我们可以把一个原生代码编写成的对象封装成js对象传进webview中调用，这样就可以调用到了。</p><p>这么常用的功能，肯定有先驱为我们铺好路滴，Cordova就是用来打破这个屏障的，原称为phonegap（手机代沟？），cordova可以很方便的调用到系统功能，还有很多做好的插件使用，比如扫描二维码等等。帮助文档：<a href="http://cordova.apache.org/docs/en/5.4.0/">http://cordova.apache.org/docs/en/5.4.0/</a></p><p>移动终端上，Angular当然也有提供相应的模块，比如前面提到过的<a href="http://ngmodules.org/modules/ng-cordova">ngCordova</a>。还有ionic框架，ionic是基于Angular专用于开发HybirdApp（混合型App）的移动框架，提供了大量的Angular指令集，可以十分方便的开发HybirdApp，帮助文档：<a href="http://ionicframework.com/docs/">http://ionicframework.com/docs/</a></p><p><strong>转载请注明出处：<a href="http://zevenfang.github.io/">ZevenFang</a>，O(∩_∩)O谢谢~</strong></p>]]></content>
      
      
      <categories>
          
          <category> Front </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap </tag>
            
            <tag> AngularJs </tag>
            
            <tag> Express </tag>
            
            <tag> Cordova </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu搭建git服务器</title>
      <link href="/2016/04/24/ubuntu%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2016/04/24/ubuntu%E6%90%AD%E5%BB%BAgit%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="服务器操作"><a href="#服务器操作" class="headerlink" title="服务器操作"></a>服务器操作</h3><ol><li><p>安装git</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure></li><li><p>创建git用户和git用户组，分配目录/home/git，然后:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><p>将：<code>git:x:1003:1003::/home/git:</code><br>改成：<code>git:x:1003:1003::/home/git:/usr/bin/git-shell</code><br>禁用 git 用户的 shell</p></li><li><p>在<code>/home/git</code>下创建<code>.ssh</code>文件夹</p></li><li><p>在<code>.ssh</code>下创建<code>authorized_keys</code>文件，如果无效查看<code>/etc/ssh/sshd_config</code>文件一行：(AuthorizedKeysFile      %h/.ssh/authorized_keys) 有没有被注释掉，重启ssh服务</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh restart</span><br></pre></td></tr></table></figure></li></ol><h3 id="客户端操作"><a href="#客户端操作" class="headerlink" title="客户端操作"></a>客户端操作</h3><ol start="5"><li><p>配置git用户信息</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name=username</span><br><span class="line">git config --alobal user.email=user@domain.com</span><br></pre></td></tr></table></figure></li><li><p>使用keygen在客户端生成公钥，命令如下：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p> 剩下按提示走（一般询问三次，1.公钥存放地址，2.设置密码，3.重复设置的密码）</p></li></ol><h3 id="服务器操作-1"><a href="#服务器操作-1" class="headerlink" title="服务器操作"></a>服务器操作</h3><ol start="7"><li><p>将生成的<code>id_rsa.pub</code>上传到服务器上，然后将内容粘贴到<code>authorized_keys</code>文件中，不要采用记事本打开，使用命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> id_rsa.pub &gt;&gt;authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>在/home/git目录下，创建仓库sample.git：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init --bare sample.git</span><br></pre></td></tr></table></figure><p> 别忘了授予git拥有目录的权限，否则push代码时候会报没写入权限的错</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git sample.git</span><br></pre></td></tr></table></figure></li></ol><h3 id="客户端操作-1"><a href="#客户端操作-1" class="headerlink" title="客户端操作"></a>客户端操作</h3><ol start="9"><li><p>测试是否成功连接上git server</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@hostname:sample.git</span><br></pre></td></tr></table></figure><p> 如果有Welcome什么的就是成功了，但是没法使用bash</p></li><li><p>可以克隆git仓库到本地啦，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@hostname:sample.git</span><br></pre></td></tr></table></figure><p>会询问一次第6步设置的密码，成功校验就可以clone成功！</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
